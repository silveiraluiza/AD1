#Substituimos o valor booleano por um numérico
library(plyr)
ano_subset$evasao <- as.character(ano_subset$evasao)
ano_subset$evasao <- revalue(ano_subset$evasao, c("FALSE"="0"))
ano_subset$evasao <- revalue(ano_subset$evasao, c("TRUE"="1"))
#Removemos valores repetidos de evasão do mesmo aluno
ano_subset <- unique(ano_subset)
ano_subset <- subset(ano_subset, select=c(2,3))
ano_subset$evasao <- as.integer(ano_subset$evasao)
#Somamos os valores numéricos para encontrar quantas evasões existiram por ano
ano_subset <- ddply(ano_subset, .(ano), summarize, evasao = sum(evasao))
barplot(ano_subset$evasao,
main = "Índices de Evasão Anual",
xlab = "Ano",
ylab = "Evasão",
names.arg = ano_subset$ano,
col = "darkred")
library(dplyr)
library(ggplot2)
matr_unicas = treino[!duplicated(treino[,1]),]
matr_unicas$MAT_MEDIA_FINAL[is.na(matr_unicas$MAT_MEDIA_FINAL)] = 0
library(dplyr)
library(ggplot2)
matr_unicas = treino[!duplicated(treino[,1]),]
matr_unicas$media[is.na(matr_unicas$media)] = 0
distribuicao = group_by(matr_unicas, matricula, evadiu) %>% summarise(count = n())
colnames(distribuicao) <- c("ano", "evadiu", "contagem")
ggplot(data=distribuicao, aes(x=ano, y=contagem, fill=evadiu)) +
geom_bar(stat="identity") + scale_fill_manual(values=c('#999999','#E69F00'))
# Importando os dados
treino <- read.csv('treino_classificacao.csv')
# Criando um data frame para a ocorrência de evasões por ano
ano_subset <- subset(treino,select=c(1,4,7))
colnames(ano_subset) <- c("matr", "ano", "evasao")
#Substituimos o valor booleano por um numérico
library(plyr)
ano_subset$evasao <- as.character(ano_subset$evasao)
ano_subset$evasao <- revalue(ano_subset$evasao, c("FALSE"="0"))
ano_subset$evasao <- revalue(ano_subset$evasao, c("TRUE"="1"))
#Removemos valores repetidos de evasão do mesmo aluno
ano_subset <- unique(ano_subset)
ano_subset <- subset(ano_subset, select=c(2,3))
ano_subset$evasao <- as.integer(ano_subset$evasao)
#Somamos os valores numéricos para encontrar quantas evasões existiram por ano
ano_subset <- ddply(ano_subset, .(ano), summarize, evasao = sum(evasao))
barplot(ano_subset$evasao,
main = "Índices de Evasão Anual",
xlab = "Ano",
ylab = "Evasão",
names.arg = ano_subset$ano,
col = "darkred")
library(dplyr)
library(ggplot2)
matr_unicas = treino[!duplicated(treino[,1]),]
matr_unicas$MAT_MEDIA_FINAL[is.na(matr_unicas$MAT_MEDIA_FINAL)] = 0
distribuicao = group_by(matr_unicas, matricula, evadiu) %>% summarise(count = n())
library(dplyr)
library(ggplot2)
matr_unicas = treino[!duplicated(treino[,1]),]
matr_unicas$MAT_MEDIA_FINAL[is.na(matr_unicas$MAT_MEDIA_FINAL)] = 0
distribuicao = group_by(matr_unicas, MAT_TUR_ANO, EVADIU) %>% summarise(count = n())
colnames(distribuicao) <- c("ano", "evadiu", "contagem")
ggplot(data=distribuicao, aes(x=ano, y=contagem, fill=evadiu)) +
geom_bar(stat="identity") + scale_fill_manual(values=c('#999999','#E69F00'))
# Importando os dados
treino <- read.csv('treino_classificacao.csv')
names(treino) <- c("matricula", "cod_disciplina", "disciplina", "ano", "periodo", "media", "evadiu")
# Criando um data frame para a ocorrência de evasões por ano
ano_subset <- subset(treino,select=c(1,4,7))
colnames(ano_subset) <- c("matr", "ano", "evasao")
#Substituimos o valor booleano por um numérico
library(plyr)
ano_subset$evasao <- as.character(ano_subset$evasao)
ano_subset$evasao <- revalue(ano_subset$evasao, c("FALSE"="0"))
ano_subset$evasao <- revalue(ano_subset$evasao, c("TRUE"="1"))
#Removemos valores repetidos de evasão do mesmo aluno
ano_subset <- unique(ano_subset)
ano_subset <- subset(ano_subset, select=c(2,3))
ano_subset$evasao <- as.integer(ano_subset$evasao)
#Somamos os valores numéricos para encontrar quantas evasões existiram por ano
ano_subset <- ddply(ano_subset, .(ano), summarize, evasao = sum(evasao))
barplot(ano_subset$evasao,
main = "Índices de Evasão Anual",
xlab = "Ano",
ylab = "Evasão",
names.arg = ano_subset$ano,
col = "darkred")
library(dplyr)
library(ggplot2)
matr_unicas = treino[!duplicated(treino[,1]),]
matr_unicas$media[is.na(matr_unicas$media)] = 0
distribuicao = group_by(matr_unicas, ano, evadiu) %>% summarise(count = n())
colnames(distribuicao) <- c("ano", "evadiu", "contagem")
ggplot(data=distribuicao, aes(x=ano, y=contagem, fill=evadiu)) +
geom_bar(stat="identity") + scale_fill_manual(values=c('#999999','#E69F00'))
reprovacoes <- function(medias) {
temp <- medias[medias < 5]
return(length(temp))
}
treino <- treino %>%
group_by(matricula) %>%
mutate(num_reprovacoes = reprovacoes(medias = media))
evadiu.true <- treino %>%
ungroup() %>%
filter(evadiu == TRUE) %>%
select(matricula, num_reprovacoes) %>%
group_by(matricula, num_reprovacoes) %>%
unique() %>%
ungroup() %>%
select(num_reprovacoes) %>%
table()
evadiu.false <- treino %>%
ungroup() %>%
filter(evadiu == FALSE) %>%
select(matricula, num_reprovacoes) %>%
group_by(matricula, num_reprovacoes) %>%
unique() %>%
ungroup() %>%
select(num_reprovacoes) %>%
table()
evadiu.true <- as.data.frame(evadiu.true)
evadiu.false <- as.data.frame(evadiu.false)
names(evadiu.true) <- c("num_reprovacoes", "freq.evadiu.true")
names(evadiu.false) <- c("num_reprovacoes", "freq.evadiu.false")
reprovacoes <- full_join(evadiu.true, evadiu.false, by = "num_reprovacoes")
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.true)) +
geom_bar(stat = "identity", fill="#56B4E9", colour="#0072B2") +
labs(title = "Frequencia do atributo criado para evadiu == TRUE",
x = "número de reprovacoes", y = "número de alunos")
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.false)) +
geom_bar(stat = "identity", fill="#56B4E9", colour="#0072B2") +
labs(title = "Frequencia do atributo criado para evadiu == FALSE",
x = "número de reprovacoes", y = "número de alunos")
# Importando os dados
treino <- read.csv('treino_classificacao.csv')
names(treino) <- c("matricula", "cod_disciplina", "disciplina", "ano", "periodo", "media", "evadiu")
# Criando um data frame para a ocorrência de evasões por ano
ano_subset <- subset(treino,select=c(1,4,7))
colnames(ano_subset) <- c("matr", "ano", "evasao")
#Substituimos o valor booleano por um numérico
library(plyr)
ano_subset$evasao <- as.character(ano_subset$evasao)
ano_subset$evasao <- revalue(ano_subset$evasao, c("FALSE"="0"))
ano_subset$evasao <- revalue(ano_subset$evasao, c("TRUE"="1"))
#Removemos valores repetidos de evasão do mesmo aluno
ano_subset <- unique(ano_subset)
ano_subset <- subset(ano_subset, select=c(2,3))
ano_subset$evasao <- as.integer(ano_subset$evasao)
#Somamos os valores numéricos para encontrar quantas evasões existiram por ano
ano_subset <- ddply(ano_subset, .(ano), summarize, evasao = sum(evasao))
barplot(ano_subset$evasao,
main = "Índices de Evasão Anual",
xlab = "Ano",
ylab = "Evasão",
names.arg = ano_subset$ano,
col = "darkred")
reprovacoes <- function(medias) {
temp <- medias[medias < 5]
return(length(temp))
}
treino <- treino %>%
group_by(matricula) %>%
mutate(num_reprovacoes = reprovacoes(medias = media))
evadiu.true <- treino %>%
ungroup() %>%
filter(evadiu == TRUE) %>%
select(matricula, num_reprovacoes) %>%
group_by(matricula, num_reprovacoes) %>%
unique() %>%
ungroup() %>%
select(num_reprovacoes) %>%
table()
evadiu.false <- treino %>%
ungroup() %>%
filter(evadiu == FALSE) %>%
select(matricula, num_reprovacoes) %>%
group_by(matricula, num_reprovacoes) %>%
unique() %>%
ungroup() %>%
select(num_reprovacoes) %>%
table()
evadiu.true <- as.data.frame(evadiu.true)
evadiu.false <- as.data.frame(evadiu.false)
names(evadiu.true) <- c("num_reprovacoes", "freq.evadiu.true")
names(evadiu.false) <- c("num_reprovacoes", "freq.evadiu.false")
reprovacoes <- full_join(evadiu.true, evadiu.false, by = "num_reprovacoes")
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.true)) +
geom_bar(stat = "identity", fill="#56B4E9", colour="#43aa83") +
labs(title = "Frequencia das reprovações para evadiu == TRUE",
x = "número de reprovacoes", y = "número de alunos")
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.false)) +
geom_bar(stat = "identity", fill="#56B4E9", colour="#0072B2") +
labs(title = "Frequencia das reprovações para evadiu == FALSE",
x = "número de reprovacoes", y = "número de alunos")
reprovacoes <- function(medias) {
temp <- medias[medias < 5]
return(length(temp))
}
treino <- treino %>%
group_by(matricula) %>%
mutate(num_reprovacoes = reprovacoes(medias = media))
evadiu.true <- treino %>%
ungroup() %>%
filter(evadiu == TRUE) %>%
select(matricula, num_reprovacoes) %>%
group_by(matricula, num_reprovacoes) %>%
unique() %>%
ungroup() %>%
select(num_reprovacoes) %>%
table()
evadiu.false <- treino %>%
ungroup() %>%
filter(evadiu == FALSE) %>%
select(matricula, num_reprovacoes) %>%
group_by(matricula, num_reprovacoes) %>%
unique() %>%
ungroup() %>%
select(num_reprovacoes) %>%
table()
evadiu.true <- as.data.frame(evadiu.true)
evadiu.false <- as.data.frame(evadiu.false)
names(evadiu.true) <- c("num_reprovacoes", "freq.evadiu.true")
names(evadiu.false) <- c("num_reprovacoes", "freq.evadiu.false")
reprovacoes <- full_join(evadiu.true, evadiu.false, by = "num_reprovacoes")
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.true)) +
geom_bar(stat = "identity", fill="#43aa83", colour="#43aa83") +
labs(title = "Frequencia das reprovações para evadiu == TRUE",
x = "número de reprovacoes", y = "número de alunos")
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.false)) +
geom_bar(stat = "identity", fill="##43aa83", colour="##43aa83") +
labs(title = "Frequencia das reprovações para evadiu == FALSE",
x = "número de reprovacoes", y = "número de alunos")
View(reprovacoes)
ggplot(reprovacoes, aes(x=num_reprovacoes, y=freq.evadiu.false)) +
geom_boxplot()
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.false)) +
geom_bar(stat = "identity", fill="##43aa83", colour="#43aa83") +
labs(title = "Frequencia das reprovações para evadiu == FALSE",
x = "número de reprovacoes", y = "número de alunos")
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.false)) +
geom_bar(stat = "identity", fill="#43aa83", colour="#43aa83") +
labs(title = "Frequencia das reprovações para evadiu == FALSE",
x = "número de reprovacoes", y = "número de alunos")
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.true)) +
geom_bar(stat = "identity", fill="#43aa83", colour="#43aa83") +
labs(title = "Frequencia das reprovações para evadiu == TRUE",
x = "número de reprovacoes", y = "número de alunos")
library("recommenderlab")
install.packages("arules")
setRepositories()
install.packages("arules")
setRepositories()
install.packages("arules")
setwd("~/UFCG/20171/AD1/problema 1")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse, warn.conflicts = F)
library(dplyr)
library(ggplot2)
dados <- read.csv('series_from_imdb.csv')
unique(dados$series_name)
names(dados)
unique(dados$series_name)
View(dados)
group_by(dados, series_name) %>%
summarise(GroupVariance=var(rep(Value,Count)), TotalCount=sum(Count))
group_by(dados, series_name) %>%
summarise(GroupVariance=var(rep(UserRating))
variance <- c(var(ouat$UserRating),var(t100$UserRating),var(ob$UserRating),var(st$UserRating))
group_by(dados, series_name) %>%
summarise(GroupVariance=var(rep(UserRating)))
View(dados)
d <-group_by(dados, series_name) %>%
summarise(GroupVariance=var(rep(UserRating)))
View(d)
variancia <-group_by(dados, series_name) %>%
summarise(SeriesVariance=var(rep(UserRating)))
show(variancia)
View(variancia)
variancia <-group_by(dados, series_name) %>%
summarise(SeriesVariance=var(rep(UserRating)), N_temporadas=max(season))
View(variancia)
dados %>%
ggplot(aes(x = series_name,y = UserRating)) + geom_boxplot(outlier.color = NA) + labs( x= "Série", y= "Nota") + geom_jitter(width = .1, size = 1, alpha = .5, color = "red")
variancia %>% ggplot(aes(x= N_temporadas , y = SeriesVariance)) + geom_histogram(size = 3, color = 'red')
variancia %>% ggplot(aes(x= N_temporadas , y = SeriesVariance)) + geom_histogram()
variancia %>% ggplot(aes(x= N_temporadas , y = series_name, color = SeriesVariance)) + geom_histogram()
variancia %>% ggplot(aes(x= series_name , y = N_temporadas, color = SeriesVariance)) + geom_histogram()
View(variancia)
variancia %>% ggplot(aes(x= series_name, color = SeriesVariance)) + geom_histogram()
variancia %>% ggplot(aes(x= N_temporadas, color = SeriesVariance)) + geom_histogram()
variancia %>% ggplot(aes(x= series_name , y = N_temporadas, color = SeriesVariance)) + geom_bar()
variancia %>% ggplot(aes(x= series_name , y = N_temporadas, color = SeriesVariance)) + geom_line()
variancia %>% ggplot(aes(x= series_name , y = N_temporadas, color = SeriesVariance)) + geom_point()
median(variancia$SeriesVariance)
var1 <- variancia %>% filter(SeriesVariance >= 0.1966952)
var2 <- variancia %>% filter(SeriesVariance < 0.1966952)
View(var2)
View(var1)
var1 %>% ggplot(aes(x= series_name , y = N_temporadas, color = SeriesVariance)) + geom_point()
var2 %>% ggplot(aes(x= series_name , y = N_temporadas, color = SeriesVariance)) + geom_point()
median(var1$SeriesVariance)
var1 <- variancia %>% filter(SeriesVariance >= 0.3072796)
median(var2$SeriesVariance)
var2 <- variancia %>% filter(SeriesVariance < 0.1266711)
var1 %>% ggplot(aes(x= series_name , y = N_temporadas, color = SeriesVariance)) + geom_point()
var2 %>% ggplot(aes(x= series_name , y = N_temporadas, color = SeriesVariance)) + geom_point()
# criando um data frame para as variancias
variancia <-group_by(dados, series_name) %>%
summarise(SeriesVariance=var(rep(UserRating)), N_temporadas=max(season))
mediana_variancia <- median(variancia$SeriesVariance)
var1 <- variancia %>% filter(SeriesVariance >= mediana_variancia)
mediana_var1 <- median(var1$SeriesVariance)
var1 <- variancia %>% filter(SeriesVariance >= mediana_var1)
var2 <- variancia %>% filter(SeriesVariance < mediana_variancia)
mediana_var2 <- median(var2$SeriesVariance)
var2 <- variancia %>% filter(SeriesVariance < mediana_var2)
var1 %>% ggplot(aes(x= series_name , y = N_temporadas, color = SeriesVariance)) + geom_point()
var2 %>% ggplot(aes(x= series_name , y = N_temporadas, color = SeriesVariance)) + geom_point()
ggplot(var2, aes(series_name, N_temporadas)) +
geom_col()
ggplot(var2, aes(series_name, N_temporadas, colours())) +
geom_col()
ggplot(var2, aes(series_name, N_temporadas, color = SeriesVariance)) +
geom_col()
ggplot(var2, aes(series_name, N_temporadas, fill = SeriesVariance)) +
geom_col()
ggplot(var1, aes(series_name, N_temporadas, fill = SeriesVariance)) +
geom_col()
ggplot(var2, aes(series_name, N_temporadas, fill = SeriesVariance)) +
geom_col()
var1 <- variancia %>% filter(series_name != "The Simpsons")
ggplot(var1, aes(series_name, N_temporadas, fill = SeriesVariance)) +
geom_col()
var1 <- var1 %>% filter(series_name != "The Simpsons")
ggplot(var1, aes(series_name, N_temporadas, fill = SeriesVariance)) +
geom_col()
# criando um data frame para as variancias
variancia <-group_by(dados, series_name) %>%
summarise(SeriesVariance=var(rep(UserRating)), N_temporadas=max(season))
mediana_variancia <- median(variancia$SeriesVariance)
var1 <- variancia %>% filter(SeriesVariance >= mediana_variancia)
mediana_var1 <- median(var1$SeriesVariance)
var1 <- var1 %>% filter(SeriesVariance >= mediana_var1)
var2 <- variancia %>% filter(SeriesVariance < mediana_variancia)
mediana_var2 <- median(var2$SeriesVariance)
var2 <- var2 %>% filter(SeriesVariance < mediana_var2)
ggplot(var2, aes(series_name, N_temporadas, fill = SeriesVariance)) +
geom_col()
ggplot(var1, aes(series_name, N_temporadas, fill = SeriesVariance)) +
geom_col()
var1 <- var1 %>% filter(series_name != "The Simpsons")
ggplot(var1, aes(series_name, N_temporadas, fill = SeriesVariance)) +
geom_col()
ggplot(var2, aes(series_name, N_temporadas, fill = SeriesVariance)) +
geom_col()
ggplot(var1, aes(series_name, N_temporadas, fill = SeriesVariance)) +
geom_col()
ggplot(var1, aes(series_name, SeriesVariance, fill = N_temporadas)) +
geom_col()
ggplot(var2, aes(series_name, SeriesVariance, fill = N_temporadas)) +
geom_col()
maxmin <- variancia %>% filter(SeriesVariance >= max(SeriesVariance), SeriesVariance <= min(SeriesVariance))
View(maxmin)
maxmin <- variancia %>% filter(SeriesVariance >= max(SeriesVariance) || SeriesVariance <= min(SeriesVariance))
maxmin <- data.frame( c("The 100", "Narcos"), c(max(variancia$SeriesVariance), min(variancia$SeriesVariance)) )
View(maxmin)
maxmin <- data.frame(serie, variancias, temporadas)
serie <- c("The 100", "Narcos")
variancias <- c(max(variancia$SeriesVariance), min(variancia$SeriesVariance))
maxmin <- data.frame(serie, variancias, temporadas)
temporadas <- c(4, 2)
maxmin <- data.frame(serie, variancias, temporadas)
View(maxmin)
ggplot(maxmin, aes(series, variancias, fill = temporadas)) +
geom_col()
ggplot(maxmin, aes(serie, variancias, fill = temporadas)) +
geom_col()
ggplot(maxmin, aes(serie, temporadas, fill = variancias)) +
geom_col()
# criando um data frame para as variancias
variancia <-group_by(dados, series_name) %>%
summarise(SeriesVariance=var(rep(UserRating)), N_temporadas=max(season))
# Mostrando os dois extremos
serie <- c("The 100", "Narcos")
variancias <- c(max(variancia$SeriesVariance), min(variancia$SeriesVariance))
temporadas <- c(4, 2)
maxmin <- data.frame(serie, variancias, temporadas)
ggplot(maxmin, aes(serie, temporadas, fill = variancias)) +
geom_col()
show(maxmin)
# Mostrando os dois extremos
serie <- c("The Walking Dead", "Narcos")
variancias <- c(0.4801134, min(variancia$SeriesVariance))
temporadas <- c(7, 2)
maxmin <- data.frame(serie, variancias, temporadas)
ggplot(maxmin, aes(serie, temporadas, fill = variancias)) +
geom_col()
show(maxmin)
t100 <- dados %>% filter(series_name %in% c("The 100"))
t100 %>%
ggplot(aes(x = season_ep,y = UserRating, color = series_name)) + geom_line() + facet_grid(series_name~season)+ labs(x= "Temporada da Série", y= "Nota do Usuário")
t100 %>%
ggplot(aes(x = season_ep,y = UserRating, color = 'blue')) + geom_line() + facet_grid(series_name~season)+ labs(x= "Temporada da Série", y= "Nota do Usuário")
t100 %>%
ggplot(aes(x = season_ep,y = UserRating, color = blue)) + geom_line() + facet_grid(series_name~season)+ labs(x= "Temporada da Série", y= "Nota do Usuário")
t100 %>%
ggplot(aes(x = season_ep,y = UserRating)) + geom_line() + facet_grid(series_name~season)+ labs(x= "Temporada da Série", y= "Nota do Usuário")
mediana_variancia <- median(variancia$SeriesVariance)
var1 <- variancia %>% filter(SeriesVariance >= mediana_variancia)
mediana_var1 <- median(var1$SeriesVariance)
var1 <- var1 %>% filter(SeriesVariance >= mediana_var1)
var2 <- variancia %>% filter(SeriesVariance < mediana_variancia)
mediana_var2 <- median(var2$SeriesVariance)
var2 <- var2 %>% filter(SeriesVariance < mediana_var2)
ggplot(var2, aes(series_name, SeriesVariance, fill = N_temporadas)) +
geom_col()
ggplot(var1, aes(series_name, SeriesVariance, fill = N_temporadas)) +
geom_col()
ggplot(var2, aes(series_name, SeriesVariance, fill = N_temporadas)) +
geom_col()
ggplot(var2, aes(series_name, SeriesVariance, fill = N_temporadas)) + labs(x= "Variância", y= "Séries") +
geom_col()
ggplot(var2, aes(series_name, SeriesVariance, fill = N_temporadas)) + labs(x= "Séries", y= "Variância") +
geom_col()
ggplot(var1, aes(series_name, SeriesVariance, fill = N_temporadas)) + labs(x= "Séries Com Maior Variância", y= "Variância") +
geom_col()
var1 <- var1 %>% filter(series_name != "The Simpsons")
var1 <- var1 %>% filter(series_name != "The 100")
ggplot(var1, aes(series_name, SeriesVariance, fill = N_temporadas)) + labs(x= "Séries Com Maior Variância", y= "Variância") +
geom_col()
ggplot(var2, aes(series_name, SeriesVariance, fill = N_temporadas)) + labs(x= "Séries Com Menor Variância", y= "Variância") +
geom_col()
mediana_temporadas_regular <- median(var2$N_temporadas)
mediana_temporadas_irregular <- median(var1$N_temporadas)
var1 <- var1 %>% filter(series_name != "The Simpsons")
var1 <- var1 %>% filter(series_name != "The 100")
ggplot(var1, aes(series_name, SeriesVariance, fill = N_temporadas)) + labs(x= "Séries Com Maior Variância", y= "Variância") +
geom_col()
mediana_temporadas_regular <- median(var2$N_temporadas)
mediana_temporadas_irregular <- median(var1$N_temporadas)
show(mediana_temporadas_regular)
show(mediana_temporadas_irregular)
var1 <- var1 %>% filter(series_name != "The Simpsons")
var1 <- var1 %>% filter(series_name != "The 100")
ggplot(var1, aes(series_name, SeriesVariance, fill = N_temporadas)) + labs(x= "Séries Com Maior Variância", y= "Variância") +
geom_col()
mediana_temporadas_regular <- median(var2$N_temporadas)
mediana_temporadas_irregular <- median(var1$N_temporadas)
#Qualidade mais regular
show(mediana_temporadas_regular)
#Qualidade menos regular
show(mediana_temporadas_irregular)
var1 <- var1 %>% filter(series_name != "The Simpsons")
var1 <- var1 %>% filter(series_name != "The 100")
ggplot(var1, aes(series_name, SeriesVariance, fill = N_temporadas)) + labs(x= "Séries Com Maior Variância", y= "Variância") +
geom_col()
names(dados)
notas_mediana <-group_by(dados, series_name) %>%
summarise(notaMediana= median(rep(UserRating)))
View(notas_mediana)
View(variancia)
top5 <- notas_mediana %>% filter(notaMediana >= 8.95)
View(top5)
top5 %>% ggplot(aes(x= series_name , y = notaMediana)) + geom_point(size = 3, color = 'red')
notas_mediana <- notas_mediana[order(-notaMediana),]
View(notas_mediana)
notas.mediana.order <- notas_mediana[order(-notaMediana),]
order(notas_mediana$notaMediana, decreasing=TRUE)
head(notas_mediana, n=11)
notas_mediana <- order(notas_mediana$notaMediana, decreasing=TRUE)
head(notas_mediana, n=11)
# calculando as medianas e criando data frame para elas
notas_mediana <-group_by(dados, series_name) %>%
summarise(notaMediana= median(rep(UserRating)))
top5 <- notas_mediana %>% filter(notaMediana >= 8.95)
top5 %>% ggplot(aes(x= series_name , y = notaMediana)) + geom_point(size = 3, color = 'red')
notas_mediana <- notas_mediana[order(notas_mediana$notaMediana, decreasing=TRUE),]
head(notas_mediana, n=11)
notas_mediana <- notas_mediana[order(notas_mediana$notaMediana, decreasing=TRUE),]
head(notas_mediana, n=12)
notas_mediana <- notas_mediana[order(notas_mediana$notaMediana),]
head(notas_mediana, n=5)
worst5 <- notas_mediana %>% filter(notaMediana <= 8.3)
worst5 <- notas_mediana %>% filter(notaMediana < 8.3)
worst5 <- notas_mediana %>% filter(notaMediana <= 8.3)
View(worst5)
View(notas_mediana)
worst5 <- notas_mediana %>% filter(series_name %in% c("The Simpsons", "Modern Family", "Scandal", "Greyâ€™s Anatomy", "Black Mirror")
worst5 %>% ggplot(aes(x= series_name , y = notaMediana)) + geom_point(size = 3, color = 'red')
worst5 <- notas_mediana %>% filter(series_name %in% c("The Simpsons", "Modern Family", "Scandal", "Greyâ€™s Anatomy", "Black Mirror"))
worst5 %>% ggplot(aes(x= series_name , y = notaMediana)) + geom_point(size = 3, color = 'red')
View(dados)
dados <- dados[order(dados$UserRating),]
head(dados, n=5)
View(dados)
dados1 <- dados1[ -c(4, 7:18) ]
dados1 <- dados[order(dados$UserRating),]
dados1 <- dados1[ -c(4, 7:18) ]
head(dados1, n=5)
View(dados)
dados1 <- dados1[ -c(2:4, 7:18) ]
dados1 <- dados[order(dados$UserRating),]
dados1 <- dados1[ -c(2:4, 7:18) ]
head(dados1, n=5)
dados1 <- dados[order(dados$UserRating),]
dados1 <- dados1[ -c(2:4, 7:18) ]
head(dados1, n=10)
worst5 %>%
ggplot(aes(x = series_name,y = UserRating)) + geom_boxplot(outlier.color = NA) + labs( x= "Série", y= "Nota") + geom_jitter(width = .1, size = 1, alpha = .5, color = "red")
worst5 <- dados %>% filter(series_name %in% c("The Simpsons", "Modern Family", "Scandal", "Greyâ€™s Anatomy", "Black Mirror"))
worst5 %>%
ggplot(aes(x = series_name,y = UserRating)) + geom_boxplot(outlier.color = NA) + labs( x= "Série", y= "Nota") + geom_jitter(width = .1, size = 1, alpha = .5, color = "red")
