ylab = "Evasão",
names.arg = ano_subset$ano,
col = "darkred")
library(dplyr)
library(ggplot2)
matr_unicas = treino[!duplicated(treino[,1]),]
matr_unicas$MAT_MEDIA_FINAL[is.na(matr_unicas$MAT_MEDIA_FINAL)] = 0
distribuicao = group_by(matr_unicas, MAT_TUR_ANO, EVADIU) %>% summarise(count = n())
colnames(distribuicao) <- c("ano", "evadiu", "contagem")
ggplot(data=distribuicao, aes(x=ano, y=contagem, fill=evadiu)) +
geom_bar(stat="identity") + scale_fill_manual(values=c('#999999','#E69F00'))
names(treino) <- c("matricula", "cod_disciplina", "disciplina", "ano", "periodo", "media", "evadiu")
reprovacoes <- function(medias) {
temp <- medias[medias < 5]
return(length(temp))
}
treino <- treino %>%
group_by(matricula) %>%
mutate(num_reprovacoes = reprovacoes(medias = media))
evadiu.true <- treino %>%
ungroup() %>%
filter(evadiu == TRUE) %>%
select(matricula, num_reprovacoes) %>%
group_by(matricula, num_reprovacoes) %>%
unique() %>%
ungroup() %>%
select(num_reprovacoes) %>%
table()
evadiu.false <- treino %>%
ungroup() %>%
filter(evadiu == FALSE) %>%
select(matricula, num_reprovacoes) %>%
group_by(matricula, num_reprovacoes) %>%
unique() %>%
ungroup() %>%
select(num_reprovacoes) %>%
table()
evadiu.true <- as.data.frame(evadiu.true)
evadiu.false <- as.data.frame(evadiu.false)
names(evadiu.true) <- c("num_reprovacoes", "freq.evadiu.true")
names(evadiu.false) <- c("num_reprovacoes", "freq.evadiu.false")
reprovacoes <- full_join(evadiu.true, evadiu.false, by = "num_reprovacoes")
ggplot(data = finais, aes(x = num_reprovacoes, y = freq.evadiu.true)) +
geom_bar(stat = "identity", fill="#56B4E9", colour="#0072B2") +
labs(title = "Frequencia do atributo criado para evadiu == TRUE",
x = "número de reprovacoes", y = "número de alunos")
names(treino) <- c("matricula", "cod_disciplina", "disciplina", "ano", "periodo", "media", "evadiu")
reprovacoes <- function(medias) {
temp <- medias[medias < 5]
return(length(temp))
}
treino <- treino %>%
group_by(matricula) %>%
mutate(num_reprovacoes = reprovacoes(medias = media))
evadiu.true <- treino %>%
ungroup() %>%
filter(evadiu == TRUE) %>%
select(matricula, num_reprovacoes) %>%
group_by(matricula, num_reprovacoes) %>%
unique() %>%
ungroup() %>%
select(num_reprovacoes) %>%
table()
evadiu.false <- treino %>%
ungroup() %>%
filter(evadiu == FALSE) %>%
select(matricula, num_reprovacoes) %>%
group_by(matricula, num_reprovacoes) %>%
unique() %>%
ungroup() %>%
select(num_reprovacoes) %>%
table()
evadiu.true <- as.data.frame(evadiu.true)
evadiu.false <- as.data.frame(evadiu.false)
names(evadiu.true) <- c("num_reprovacoes", "freq.evadiu.true")
names(evadiu.false) <- c("num_reprovacoes", "freq.evadiu.false")
reprovacoes <- full_join(evadiu.true, evadiu.false, by = "num_reprovacoes")
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.true)) +
geom_bar(stat = "identity", fill="#56B4E9", colour="#0072B2") +
labs(title = "Frequencia do atributo criado para evadiu == TRUE",
x = "número de reprovacoes", y = "número de alunos")
ggplot(data = finais, aes(x = num_reprovacoes, y = freq.evadiu.false)) +
geom_bar(stat = "identity", fill="#56B4E9", colour="#0072B2") +
labs(title = "Frequencia do atributo criado para evadiu == FALSE",
x = "número de reprovacoes", y = "número de alunos")
names(treino) <- c("matricula", "cod_disciplina", "disciplina", "ano", "periodo", "media", "evadiu")
reprovacoes <- function(medias) {
temp <- medias[medias < 5]
return(length(temp))
}
treino <- treino %>%
group_by(matricula) %>%
mutate(num_reprovacoes = reprovacoes(medias = media))
# Importando os dados
treino <- read.csv('treino_classificacao.csv')
# Criando um data frame para a ocorrência de evasões por ano
ano_subset <- subset(treino,select=c(1,4,7))
colnames(ano_subset) <- c("matr", "ano", "evasao")
#Substituimos o valor booleano por um numérico
library(plyr)
ano_subset$evasao <- as.character(ano_subset$evasao)
ano_subset$evasao <- revalue(ano_subset$evasao, c("FALSE"="0"))
ano_subset$evasao <- revalue(ano_subset$evasao, c("TRUE"="1"))
#Removemos valores repetidos de evasão do mesmo aluno
ano_subset <- unique(ano_subset)
ano_subset <- subset(ano_subset, select=c(2,3))
ano_subset$evasao <- as.integer(ano_subset$evasao)
#Somamos os valores numéricos para encontrar quantas evasões existiram por ano
ano_subset <- ddply(ano_subset, .(ano), summarize, evasao = sum(evasao))
barplot(ano_subset$evasao,
main = "Índices de Evasão Anual",
xlab = "Ano",
ylab = "Evasão",
names.arg = ano_subset$ano,
col = "darkred")
library(dplyr)
library(ggplot2)
matr_unicas = treino[!duplicated(treino[,1]),]
matr_unicas$MAT_MEDIA_FINAL[is.na(matr_unicas$MAT_MEDIA_FINAL)] = 0
distribuicao = group_by(matr_unicas, MAT_TUR_ANO, EVADIU) %>% summarise(count = n())
colnames(distribuicao) <- c("ano", "evadiu", "contagem")
ggplot(data=distribuicao, aes(x=ano, y=contagem, fill=evadiu)) +
geom_bar(stat="identity") + scale_fill_manual(values=c('#999999','#E69F00'))
names(treino) <- c("matricula", "cod_disciplina", "disciplina", "ano", "periodo", "media", "evadiu")
reprovacoes <- function(medias) {
temp <- medias[medias < 5]
return(length(temp))
}
treino <- treino %>%
group_by(matricula) %>%
mutate(num_reprovacoes = reprovacoes(medias = media))
evadiu.true <- treino %>%
ungroup() %>%
filter(evadiu == TRUE) %>%
select(matricula, num_reprovacoes) %>%
group_by(matricula, num_reprovacoes) %>%
unique() %>%
ungroup() %>%
select(num_reprovacoes) %>%
table()
evadiu.false <- treino %>%
ungroup() %>%
filter(evadiu == FALSE) %>%
select(matricula, num_reprovacoes) %>%
group_by(matricula, num_reprovacoes) %>%
unique() %>%
ungroup() %>%
select(num_reprovacoes) %>%
table()
evadiu.true <- as.data.frame(evadiu.true)
evadiu.false <- as.data.frame(evadiu.false)
names(evadiu.true) <- c("num_reprovacoes", "freq.evadiu.true")
names(evadiu.false) <- c("num_reprovacoes", "freq.evadiu.false")
reprovacoes <- full_join(evadiu.true, evadiu.false, by = "num_reprovacoes")
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.true)) +
geom_bar(stat = "identity", fill="#56B4E9", colour="#0072B2") +
labs(title = "Frequencia do atributo criado para evadiu == TRUE",
x = "número de reprovacoes", y = "número de alunos")
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.false)) +
geom_bar(stat = "identity", fill="#56B4E9", colour="#0072B2") +
labs(title = "Frequencia do atributo criado para evadiu == FALSE",
x = "número de reprovacoes", y = "número de alunos")
# Importando os dados
treino <- read.csv('treino_classificacao.csv')
names(treino) <- c("matricula", "cod_disciplina", "disciplina", "ano", "periodo", "media", "evadiu")
# Criando um data frame para a ocorrência de evasões por ano
ano_subset <- subset(treino,select=c(1,4,7))
colnames(ano_subset) <- c("matr", "ano", "evasao")
#Substituimos o valor booleano por um numérico
library(plyr)
ano_subset$evasao <- as.character(ano_subset$evasao)
ano_subset$evasao <- revalue(ano_subset$evasao, c("FALSE"="0"))
ano_subset$evasao <- revalue(ano_subset$evasao, c("TRUE"="1"))
#Removemos valores repetidos de evasão do mesmo aluno
ano_subset <- unique(ano_subset)
ano_subset <- subset(ano_subset, select=c(2,3))
ano_subset$evasao <- as.integer(ano_subset$evasao)
#Somamos os valores numéricos para encontrar quantas evasões existiram por ano
ano_subset <- ddply(ano_subset, .(ano), summarize, evasao = sum(evasao))
barplot(ano_subset$evasao,
main = "Índices de Evasão Anual",
xlab = "Ano",
ylab = "Evasão",
names.arg = ano_subset$ano,
col = "darkred")
library(dplyr)
library(ggplot2)
matr_unicas = treino[!duplicated(treino[,1]),]
matr_unicas$MAT_MEDIA_FINAL[is.na(matr_unicas$MAT_MEDIA_FINAL)] = 0
library(dplyr)
library(ggplot2)
matr_unicas = treino[!duplicated(treino[,1]),]
matr_unicas$media[is.na(matr_unicas$media)] = 0
distribuicao = group_by(matr_unicas, matricula, evadiu) %>% summarise(count = n())
colnames(distribuicao) <- c("ano", "evadiu", "contagem")
ggplot(data=distribuicao, aes(x=ano, y=contagem, fill=evadiu)) +
geom_bar(stat="identity") + scale_fill_manual(values=c('#999999','#E69F00'))
# Importando os dados
treino <- read.csv('treino_classificacao.csv')
# Criando um data frame para a ocorrência de evasões por ano
ano_subset <- subset(treino,select=c(1,4,7))
colnames(ano_subset) <- c("matr", "ano", "evasao")
#Substituimos o valor booleano por um numérico
library(plyr)
ano_subset$evasao <- as.character(ano_subset$evasao)
ano_subset$evasao <- revalue(ano_subset$evasao, c("FALSE"="0"))
ano_subset$evasao <- revalue(ano_subset$evasao, c("TRUE"="1"))
#Removemos valores repetidos de evasão do mesmo aluno
ano_subset <- unique(ano_subset)
ano_subset <- subset(ano_subset, select=c(2,3))
ano_subset$evasao <- as.integer(ano_subset$evasao)
#Somamos os valores numéricos para encontrar quantas evasões existiram por ano
ano_subset <- ddply(ano_subset, .(ano), summarize, evasao = sum(evasao))
barplot(ano_subset$evasao,
main = "Índices de Evasão Anual",
xlab = "Ano",
ylab = "Evasão",
names.arg = ano_subset$ano,
col = "darkred")
library(dplyr)
library(ggplot2)
matr_unicas = treino[!duplicated(treino[,1]),]
matr_unicas$MAT_MEDIA_FINAL[is.na(matr_unicas$MAT_MEDIA_FINAL)] = 0
distribuicao = group_by(matr_unicas, matricula, evadiu) %>% summarise(count = n())
library(dplyr)
library(ggplot2)
matr_unicas = treino[!duplicated(treino[,1]),]
matr_unicas$MAT_MEDIA_FINAL[is.na(matr_unicas$MAT_MEDIA_FINAL)] = 0
distribuicao = group_by(matr_unicas, MAT_TUR_ANO, EVADIU) %>% summarise(count = n())
colnames(distribuicao) <- c("ano", "evadiu", "contagem")
ggplot(data=distribuicao, aes(x=ano, y=contagem, fill=evadiu)) +
geom_bar(stat="identity") + scale_fill_manual(values=c('#999999','#E69F00'))
# Importando os dados
treino <- read.csv('treino_classificacao.csv')
names(treino) <- c("matricula", "cod_disciplina", "disciplina", "ano", "periodo", "media", "evadiu")
# Criando um data frame para a ocorrência de evasões por ano
ano_subset <- subset(treino,select=c(1,4,7))
colnames(ano_subset) <- c("matr", "ano", "evasao")
#Substituimos o valor booleano por um numérico
library(plyr)
ano_subset$evasao <- as.character(ano_subset$evasao)
ano_subset$evasao <- revalue(ano_subset$evasao, c("FALSE"="0"))
ano_subset$evasao <- revalue(ano_subset$evasao, c("TRUE"="1"))
#Removemos valores repetidos de evasão do mesmo aluno
ano_subset <- unique(ano_subset)
ano_subset <- subset(ano_subset, select=c(2,3))
ano_subset$evasao <- as.integer(ano_subset$evasao)
#Somamos os valores numéricos para encontrar quantas evasões existiram por ano
ano_subset <- ddply(ano_subset, .(ano), summarize, evasao = sum(evasao))
barplot(ano_subset$evasao,
main = "Índices de Evasão Anual",
xlab = "Ano",
ylab = "Evasão",
names.arg = ano_subset$ano,
col = "darkred")
library(dplyr)
library(ggplot2)
matr_unicas = treino[!duplicated(treino[,1]),]
matr_unicas$media[is.na(matr_unicas$media)] = 0
distribuicao = group_by(matr_unicas, ano, evadiu) %>% summarise(count = n())
colnames(distribuicao) <- c("ano", "evadiu", "contagem")
ggplot(data=distribuicao, aes(x=ano, y=contagem, fill=evadiu)) +
geom_bar(stat="identity") + scale_fill_manual(values=c('#999999','#E69F00'))
reprovacoes <- function(medias) {
temp <- medias[medias < 5]
return(length(temp))
}
treino <- treino %>%
group_by(matricula) %>%
mutate(num_reprovacoes = reprovacoes(medias = media))
evadiu.true <- treino %>%
ungroup() %>%
filter(evadiu == TRUE) %>%
select(matricula, num_reprovacoes) %>%
group_by(matricula, num_reprovacoes) %>%
unique() %>%
ungroup() %>%
select(num_reprovacoes) %>%
table()
evadiu.false <- treino %>%
ungroup() %>%
filter(evadiu == FALSE) %>%
select(matricula, num_reprovacoes) %>%
group_by(matricula, num_reprovacoes) %>%
unique() %>%
ungroup() %>%
select(num_reprovacoes) %>%
table()
evadiu.true <- as.data.frame(evadiu.true)
evadiu.false <- as.data.frame(evadiu.false)
names(evadiu.true) <- c("num_reprovacoes", "freq.evadiu.true")
names(evadiu.false) <- c("num_reprovacoes", "freq.evadiu.false")
reprovacoes <- full_join(evadiu.true, evadiu.false, by = "num_reprovacoes")
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.true)) +
geom_bar(stat = "identity", fill="#56B4E9", colour="#0072B2") +
labs(title = "Frequencia do atributo criado para evadiu == TRUE",
x = "número de reprovacoes", y = "número de alunos")
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.false)) +
geom_bar(stat = "identity", fill="#56B4E9", colour="#0072B2") +
labs(title = "Frequencia do atributo criado para evadiu == FALSE",
x = "número de reprovacoes", y = "número de alunos")
# Importando os dados
treino <- read.csv('treino_classificacao.csv')
names(treino) <- c("matricula", "cod_disciplina", "disciplina", "ano", "periodo", "media", "evadiu")
# Criando um data frame para a ocorrência de evasões por ano
ano_subset <- subset(treino,select=c(1,4,7))
colnames(ano_subset) <- c("matr", "ano", "evasao")
#Substituimos o valor booleano por um numérico
library(plyr)
ano_subset$evasao <- as.character(ano_subset$evasao)
ano_subset$evasao <- revalue(ano_subset$evasao, c("FALSE"="0"))
ano_subset$evasao <- revalue(ano_subset$evasao, c("TRUE"="1"))
#Removemos valores repetidos de evasão do mesmo aluno
ano_subset <- unique(ano_subset)
ano_subset <- subset(ano_subset, select=c(2,3))
ano_subset$evasao <- as.integer(ano_subset$evasao)
#Somamos os valores numéricos para encontrar quantas evasões existiram por ano
ano_subset <- ddply(ano_subset, .(ano), summarize, evasao = sum(evasao))
barplot(ano_subset$evasao,
main = "Índices de Evasão Anual",
xlab = "Ano",
ylab = "Evasão",
names.arg = ano_subset$ano,
col = "darkred")
reprovacoes <- function(medias) {
temp <- medias[medias < 5]
return(length(temp))
}
treino <- treino %>%
group_by(matricula) %>%
mutate(num_reprovacoes = reprovacoes(medias = media))
evadiu.true <- treino %>%
ungroup() %>%
filter(evadiu == TRUE) %>%
select(matricula, num_reprovacoes) %>%
group_by(matricula, num_reprovacoes) %>%
unique() %>%
ungroup() %>%
select(num_reprovacoes) %>%
table()
evadiu.false <- treino %>%
ungroup() %>%
filter(evadiu == FALSE) %>%
select(matricula, num_reprovacoes) %>%
group_by(matricula, num_reprovacoes) %>%
unique() %>%
ungroup() %>%
select(num_reprovacoes) %>%
table()
evadiu.true <- as.data.frame(evadiu.true)
evadiu.false <- as.data.frame(evadiu.false)
names(evadiu.true) <- c("num_reprovacoes", "freq.evadiu.true")
names(evadiu.false) <- c("num_reprovacoes", "freq.evadiu.false")
reprovacoes <- full_join(evadiu.true, evadiu.false, by = "num_reprovacoes")
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.true)) +
geom_bar(stat = "identity", fill="#56B4E9", colour="#43aa83") +
labs(title = "Frequencia das reprovações para evadiu == TRUE",
x = "número de reprovacoes", y = "número de alunos")
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.false)) +
geom_bar(stat = "identity", fill="#56B4E9", colour="#0072B2") +
labs(title = "Frequencia das reprovações para evadiu == FALSE",
x = "número de reprovacoes", y = "número de alunos")
reprovacoes <- function(medias) {
temp <- medias[medias < 5]
return(length(temp))
}
treino <- treino %>%
group_by(matricula) %>%
mutate(num_reprovacoes = reprovacoes(medias = media))
evadiu.true <- treino %>%
ungroup() %>%
filter(evadiu == TRUE) %>%
select(matricula, num_reprovacoes) %>%
group_by(matricula, num_reprovacoes) %>%
unique() %>%
ungroup() %>%
select(num_reprovacoes) %>%
table()
evadiu.false <- treino %>%
ungroup() %>%
filter(evadiu == FALSE) %>%
select(matricula, num_reprovacoes) %>%
group_by(matricula, num_reprovacoes) %>%
unique() %>%
ungroup() %>%
select(num_reprovacoes) %>%
table()
evadiu.true <- as.data.frame(evadiu.true)
evadiu.false <- as.data.frame(evadiu.false)
names(evadiu.true) <- c("num_reprovacoes", "freq.evadiu.true")
names(evadiu.false) <- c("num_reprovacoes", "freq.evadiu.false")
reprovacoes <- full_join(evadiu.true, evadiu.false, by = "num_reprovacoes")
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.true)) +
geom_bar(stat = "identity", fill="#43aa83", colour="#43aa83") +
labs(title = "Frequencia das reprovações para evadiu == TRUE",
x = "número de reprovacoes", y = "número de alunos")
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.false)) +
geom_bar(stat = "identity", fill="##43aa83", colour="##43aa83") +
labs(title = "Frequencia das reprovações para evadiu == FALSE",
x = "número de reprovacoes", y = "número de alunos")
View(reprovacoes)
ggplot(reprovacoes, aes(x=num_reprovacoes, y=freq.evadiu.false)) +
geom_boxplot()
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.false)) +
geom_bar(stat = "identity", fill="##43aa83", colour="#43aa83") +
labs(title = "Frequencia das reprovações para evadiu == FALSE",
x = "número de reprovacoes", y = "número de alunos")
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.false)) +
geom_bar(stat = "identity", fill="#43aa83", colour="#43aa83") +
labs(title = "Frequencia das reprovações para evadiu == FALSE",
x = "número de reprovacoes", y = "número de alunos")
ggplot(data = reprovacoes, aes(x = num_reprovacoes, y = freq.evadiu.true)) +
geom_bar(stat = "identity", fill="#43aa83", colour="#43aa83") +
labs(title = "Frequencia das reprovações para evadiu == TRUE",
x = "número de reprovacoes", y = "número de alunos")
library("recommenderlab")
install.packages("arules")
setRepositories()
install.packages("arules")
setRepositories()
install.packages("arules")
setwd("~/UFCG/20171/AD1/problema 1")
knitr::opts_chunk$set(echo = TRUE)
dados <- read.csv(series_from_imdb.csv)
dados <- read.csv('series_from_imdb.csv')
View(dados)
dados <- dados %>% filter(series_name %in% c("Supergirl")
dados <- dados %>% filter(series_name %in% c("Supergirl"))
dados %>% filter(series_name %in% c("Supergirl"))
library(tidyverse, warn.conflicts = F)
install.packages("tidyverse")
dados <- read.csv('series_from_imdb.csv')
dados <- dados %>% filter(series_name %in% c("Supergirl"))
library(dplyr)
dados <- dados %>% filter(series_name %in% c("Supergirl"))
View(dados)
dados <- read.csv('series_from_imdb.csv')
dados <- dados %>% filter(series_name %in% c("Once Upon a Time", "The 100", "Orphan Black", "Stranger Things"))
View(dados)
ob <- dados %>% filter(series_name %in% c("Orphan Black"))
median(ob$UserRating)
ouat <- dados %>% filter(series_name %in% c("Once Upon a Time"))
median(ouat$UserRating)
t100 <- dados %>% filter(series_name %in% c("The 100"))
median(t100$UserRating)
st <- dados %>% filter(series_name %in% c("Stranger Things"))
median(st$UserRating)
medianas <- c(median(ouat$UserRating),median(t100$UserRating),median(ob$UserRating),median(st$UserRating))
serie <- c("Once Upon a Time", "The 100", "Orphan Black", "Stranger Things")
series.medianas <- data.frame(serie,medianas)
View(series.medianas)
ggplot(aes(x = "Sense8", y = medianas)) +
geom_jitter(width = .1)
library(ggplot2)
ggplot(aes(x = "Sense8", y = medianas)) +
geom_jitter(width = .1)
series.medianas %>% ggplot(aes(x = "Sense8", y = medianas)) +
geom_jitter(width = .1)
series.medianas %>% ggplot(aes(x = serie, y = medianas)) +
geom_jitter(width = .1)
series.medianas %>% ggplot(aes(x = serie, y = medianas))
qplot(data= series.medianas, x = serie, y = medianas)
series.medianas %>% ggplot(aes(x = serie, y = medianas))
+
geom_jitter(width = .1)
series.medianas %>% ggplot(aes(x = "Sense8", y = medianas))
series.medianas %>% ggplot(aes(x = series, y = medianas)) + geom_point()
series.medianas %>% ggplot(aes(x = serie, y = medianas)) + geom_point()
series.medianas %>% ggplot(aes(x = serie, y = medianas, color = serie)) + geom_point()
series.medianas %>% ggplot(aes(y = medianas, color = serie)) + geom_point(width = 0.5)
series.medianas %>% ggplot(aes(x="" , y = medianas, color = serie)) + geom_point(width = .5)
series.medianas %>% ggplot(aes(x= series , y = medianas, color = serie)) + geom_point(width = .5)
series.medianas %>% ggplot(aes(x= serie , y = medianas, color = serie)) + geom_point(width = .5)
series.medianas %>% ggplot(aes(x= serie , y = medianas, color = serie)) + geom_point(size = .5)
series.medianas %>% ggplot(aes(x= serie , y = medianas, color = serie)) + geom_point(size = 2)
series.medianas %>% ggplot(aes(x= serie , y = medianas, color = serie)) + geom_point(size = 3)
series.medianas %>% ggplot(aes(x= serie , y = medianas, color = medianas)) + geom_point(size = 3)
series.medianas %>% ggplot(aes(x= serie , y = medianas, color = red)) + geom_point(size = 3)
series.medianas %>% ggplot(aes(x= serie , y = medianas, color = 'red')) + geom_point(size = 3)
series.medianas %>% ggplot(aes(x= serie , y = medianas)) + geom_point(size = 3, color = 'red')
show(series.medianas)
View(st)
View(dados)
summary(dados)
describe(dados)
View(dados)
dados %>%
ggplot(aes(x = series_name,y = UserRating)) + geom_boxplot() + labs( x= "Série", y= "Nota")
dados %>%
ggplot(aes(x = series_name,y = UserRating)) + geom_boxplot() + labs( x= "Série", y= "Nota") + geom_jitter(width = .1, size = .5, alpha = .5, color = "red")
dados %>%
ggplot(aes(x = series_name,y = UserRating)) + geom_boxplot() + labs( x= "Série", y= "Nota") + geom_jitter(width = .1, size = 1, alpha = .5, color = "red")
dados %>%
ggplot(aes(x = series_name,y = UserRating)) + geom_boxplot(outlier.color = NA) + labs( x= "Série", y= "Nota") + geom_jitter(width = .1, size = 1, alpha = .5, color = "red")
dados %>%
ggplot(aes(x = series_name,y = UserRating)) + geom_boxplot(outlier.color = NA) + labs( x= "Série", y= "Nota") + geom_jitter(width = .1, size = 1, alpha = .5, color = "red")
names(dados)
head(dados)
summary(dados)
dados[sample(nrow(A), 4), ]   # select 4 rows at random
dados[sample(nrow(dados), 4), ]   # select 4 rows at random
dados[sample(nrow(dados), 8), ]   # select 4 rows at random
dados[sample(nrow(dados), 8), ]   # select 4 rows at random
unique(dados$series_name)
names(dados)
variance <- c(var(ouat$UserRating),var(t100$UserRating),var(ob$UserRating),var(st$UserRating))
variancia <- data.frame(serie,variance)
View(variancia)
series.medianas %>% ggplot(aes(x= serie , y = medianas)) + geom_point(size = 3, color = 'red')
variancia %>% ggplot(aes(x= serie , y = variance)) + geom_point(size = 3, color = 'red')
show(variancia)
unlink('atv1_cache', recursive = TRUE)
