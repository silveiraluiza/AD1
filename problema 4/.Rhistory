View(not.language)
dados - not.language
setdiff(dados, not.language)
dados <- setdiff(dados, not.language)
View(dados)
dados <- dados %>% mutate(full_date = paste(month_day, the_month, the_year, sep = '-'))
dados <- dados %>% mutate(week_day= weekdays(as.Date(full_date,'%d-%m-%Y')))
dados <- read.csv("github-users-committing-filetypes.csv")
unique(dados$file_extension)
not.language <- dados %>% filter(file_extension  %in% c("xml", "txt", "yml","png","h","scss", "jpg", "lock", "ts", "gradle","svg", "rst", "gif","ico","config","pdf"))
dados <- setdiff(dados, not.language)
dados <- dados %>% mutate(full_date = paste(month_day, the_month, the_year, sep = '-'))
dados <- dados %>% mutate(week_day= weekdays(as.Date(full_date,'%d-%m-%Y')))
dados.week <- dados %>% filter(week_day != "sábado" & week_day != "domingo")
dados.weekend <- dados %>% filter(week_day == "sábado" | week_day == "domingo")
dados.week$week_day = FALSE
dados.weekend$week_day = TRUE
dados <- read.csv("github-users-committing-filetypes.csv")
unique(dados$file_extension)
not.language <- dados %>% filter(file_extension  %in% c("xml", "txt", "yml","png","h","scss", "jpg", "lock", "ts", "gradle","svg", "rst", "gif","ico","config","pdf"))
dados <- setdiff(dados, not.language)
dados <- dados %>% mutate(full_date = paste(month_day, the_month, the_year, sep = '-'))
dados <- dados %>% mutate(week_day= weekdays(as.Date(full_date,'%d-%m-%Y')))
dados.week <- dados %>% filter(week_day != "sábado" & week_day != "domingo")
dados.weekend <- dados %>% filter(week_day == "sábado" | week_day == "domingo")
dados.week$week_day = FALSE
dados.weekend$week_day = TRUE
names(dados)[7] <- "weekend"
rm(dados.week)
rm(dados.weekend)
View(dados)
plot_py <- dados %>% group_by(file_extension) %>%
ggplot(aes(x = weekend, y = median(users), color = file_extension)) +
geom_boxplot() +  geom_jitter(width = .1) +
labs(title = "Atividade de usuários (Python)", x = "Final de Semana", y = "Usuários") +
theme(plot.title = element_text(hjust = 0.5))
plot_py <- dados %>% group_by(file_extension) %>%
ggplot(aes(x = weekend, y = median(users), color = file_extension)) +
geom_boxplot() +  geom_jitter(width = .1) +
labs(title = "Atividade de usuários (Python)", x = "Final de Semana", y = "Usuários") +
theme(plot.title = element_text(hjust = 0.5))
plot_py <- dados %>% group_by(file_extension) %>%
ggplot(aes(x = weekend, y = users, color = file_extension)) +
geom_boxplot() +  geom_jitter(width = .1) +
labs(title = "Atividade de usuários (Python)", x = "Final de Semana", y = "Usuários") +
theme(plot.title = element_text(hjust = 0.5))
plot_py <- dados %>%
ggplot(aes(x = weekend, y = users, color = file_extension)) +
geom_boxplot() +  geom_jitter(width = .1) +
labs(title = "Atividade de usuários (Python)", x = "Final de Semana", y = "Usuários") +
theme(plot.title = element_text(hjust = 0.5))
plot_py <- dados %>%
ggplot(aes(x = weekend, y = users, color = file_extension)) +
geom_boxplot() +  geom_jitter(width = .1)
plot_py <- dados %>%
ggplot(aes(x = weekend, y = users, color = file_extension)) +
geom_boxplot() +  geom_jitter(width = .1) +
labs(title = "Atividade de usuários (Python)", x = "Final de Semana", y = "Usuários") +
theme(plot.title = element_text(hjust = 0.5))
plot_py
dados <- read.csv("github-users-committing-filetypes.csv")
unique(dados$file_extension)
not.language <- dados %>% filter(file_extension  %in% c("xml", "txt", "yml","png","h","scss", "jpg", "lock", "ts", "gradle","svg", "rst", "gif","ico","config","pdf"))
dados <- setdiff(dados, not.language)
dados <- dados %>% mutate(full_date = paste(month_day, the_month, the_year, sep = '-'))
dados <- dados %>% mutate(week_day= weekdays(as.Date(full_date,'%d-%m-%Y')))
dados.week <- dados %>% filter(week_day != "sábado" & week_day != "domingo")
dados.weekend <- dados %>% filter(week_day == "sábado" | week_day == "domingo")
dados.week$week_day = FALSE
dados.weekend$week_day = TRUE
names(dados)[7] <- "weekend"
dados = rbind(dados.week,dados.weekend)
rm(dados.week)
rm(dados.weekend)
plot_py <- dados %>%
ggplot(aes(x = weekend, y = users, color = file_extension)) +
geom_boxplot() +  geom_jitter(width = .1) +
labs(title = "Atividade de usuários (Python)", x = "Final de Semana", y = "Usuários") +
theme(plot.title = element_text(hjust = 0.5))
plot_py
names(dados)[7] <- "weekend"
dados <- read.csv("github-users-committing-filetypes.csv")
unique(dados$file_extension)
not.language <- dados %>% filter(file_extension  %in% c("xml", "txt", "yml","png","h","scss", "jpg", "lock", "ts", "gradle","svg", "rst", "gif","ico","config","pdf"))
dados <- setdiff(dados, not.language)
dados <- dados %>% mutate(full_date = paste(month_day, the_month, the_year, sep = '-'))
dados <- dados %>% mutate(week_day= weekdays(as.Date(full_date,'%d-%m-%Y')))
dados.week <- dados %>% filter(week_day != "sábado" & week_day != "domingo")
dados.weekend <- dados %>% filter(week_day == "sábado" | week_day == "domingo")
dados.week$week_day = FALSE
dados.weekend$week_day = TRUE
dados = rbind(dados.week,dados.weekend)
rm(dados.week)
rm(dados.weekend)
names(dados)[7] <- "weekend"
plot_py <- dados %>%
ggplot(aes(x = weekend, y = users, color = file_extension)) +
geom_boxplot() +  geom_jitter(width = .1) +
labs(title = "Atividade de usuários (Python)", x = "Final de Semana", y = "Usuários") +
theme(plot.title = element_text(hjust = 0.5))
plot_py
plot_py <- dados %>%
ggplot(aes(x = weekend, y = users, color = file_extension)) +
geom_boxplot() +
labs(title = "Atividade de usuários (Python)", x = "Final de Semana", y = "Usuários") +
theme(plot.title = element_text(hjust = 0.5))
plot_py
dados <- read.csv("github-users-committing-filetypes.csv")
unique(dados$file_extension)
not.language <- dados %>% filter(file_extension  %in% c("xml", "txt", "yml","png","h","scss", "jpg", "lock", "ts", "gradle","svg", "rst", "gif","ico","config","pdf","yaml", "html", "eot", "json", "less", "map", "pbxproj","ttf","woff"))
dados <- setdiff(dados, not.language)
dados <- dados %>% mutate(full_date = paste(month_day, the_month, the_year, sep = '-'))
dados <- dados %>% mutate(week_day= weekdays(as.Date(full_date,'%d-%m-%Y')))
dados.week <- dados %>% filter(week_day != "sábado" & week_day != "domingo")
dados.weekend <- dados %>% filter(week_day == "sábado" | week_day == "domingo")
dados.week$week_day = FALSE
dados.weekend$week_day = TRUE
dados = rbind(dados.week,dados.weekend)
rm(dados.week)
rm(dados.weekend)
names(dados)[7] <- "weekend"
plot_py <- dados %>%
ggplot(aes(x = weekend, y = users, color = file_extension)) +
geom_boxplot() +
labs(title = "Atividade de usuários (Python)", x = "Final de Semana", y = "Usuários") +
theme(plot.title = element_text(hjust = 0.5))
plot_py
library(plotly)
ggplotly(plot_py)
ggplotly(plot_py,width= 1000, height= 700)
plot_py
dados <- read.csv("github-users-committing-filetypes.csv")
unique(dados$file_extension)
not.language <- dados %>% filter(file_extension  %in% c("xml", "txt", "yml","png","h","scss", "jpg", "lock", "ts", "gradle","svg", "rst", "gif","ico","config","pdf","yaml", "html", "eot", "json", "less", "map", "pbxproj","ttf","woff", "css"))
dados <- setdiff(dados, not.language)
dados <- dados %>% mutate(full_date = paste(month_day, the_month, the_year, sep = '-'))
dados <- dados %>% mutate(week_day= weekdays(as.Date(full_date,'%d-%m-%Y')))
dados.week <- dados %>% filter(week_day != "sábado" & week_day != "domingo")
dados.weekend <- dados %>% filter(week_day == "sábado" | week_day == "domingo")
dados.week$week_day = FALSE
dados.weekend$week_day = TRUE
dados = rbind(dados.week,dados.weekend)
rm(dados.week)
rm(dados.weekend)
names(dados)[7] <- "weekend"
plot_py <- dados %>%
ggplot(aes(x = weekend, y = users, color = file_extension)) +
geom_boxplot() +
labs(title = "Atividade de usuários", x = "Final de Semana", y = "Usuários", color="Estensão do Arquivo") +
theme(plot.title = element_text(hjust = 0.5))
plot_py
dados <- read.csv("github-users-committing-filetypes.csv")
unique(dados$file_extension)
not.language <- dados %>% filter(file_extension  %in% c("xml", "txt", "yml","png","h","scss", "jpg", "lock", "ts", "gradle","svg", "rst", "gif","ico","config","pdf","yaml", "html", "eot", "json", "less", "map", "pbxproj","ttf","woff", "css"))
dados <- setdiff(dados, not.language)
dados <- dados %>% mutate(full_date = paste(month_day, the_month, the_year, sep = '-'))
dados <- dados %>% mutate(week_day= weekdays(as.Date(full_date,'%d-%m-%Y')))
dados.week <- dados %>% filter(week_day != "sábado" & week_day != "domingo")
dados.weekend <- dados %>% filter(week_day == "sábado" | week_day == "domingo")
dados.week$week_day = FALSE
dados.weekend$week_day = TRUE
dados = rbind(dados.week,dados.weekend)
rm(dados.week)
rm(dados.weekend)
names(dados)[7] <- "weekend"
plot_py <- dados %>%
ggplot(aes(x = weekend, y = users, color = file_extension)) +
geom_boxplot() +
labs(title = "Atividade de usuários", x = "Final de Semana", y = "Usuários", color="Estensão do Arquivo") +
theme(plot.title = element_text(hjust = 0.5))
plot_py
dados <- read.csv("github-users-committing-filetypes.csv")
unique(dados$file_extension)
not.language <- dados %>% filter(file_extension  %in% c("xml", "txt", "yml","png","h","scss", "jpg", "lock", "ts", "gradle","svg", "rst", "gif","ico","config","pdf","yaml", "html", "eot", "json", "less", "map", "pbxproj","ttf","woff", "css"))
dados <- setdiff(dados, not.language)
dados <- dados %>% mutate(full_date = paste(month_day, the_month, the_year, sep = '-'))
dados <- dados %>% mutate(week_day= weekdays(as.Date(full_date,'%d-%m-%Y')))
dados.week <- dados %>% filter(week_day != "sábado" & week_day != "domingo")
dados.weekend <- dados %>% filter(week_day == "sábado" | week_day == "domingo")
dados.week$week_day = FALSE
dados.weekend$week_day = TRUE
dados = rbind(dados.week,dados.weekend)
rm(dados.week)
rm(dados.weekend)
names(dados)[7] <- "weekend"
plot_py <- dados %>%
ggplot(aes(x = weekend, y = users, color = file_extension)) +
geom_boxplot() +
labs(title = "Atividade de usuários", x = "Final de Semana", y = "Usuários", color="Estensão do Arquivo") +
theme(plot.title = element_text(hjust = 0.5))
plot_py
ggplot_ly(plot_py)
ggplotly(plot_py)
ggplotly(plot_py, width= 1400, height= 700)
not.language <- dados %>% filter(file_extension  %in% c("xml", "txt", "yml","png","h","scss", "jpg", "lock", "ts", "gradle","svg", "rst", "gif","ico","config","pdf","yaml", "html", "eot", "json", "less", "map", "pbxproj","ttf","woff", "css", "csproj"))
dados <- read.csv("github-users-committing-filetypes.csv")
unique(dados$file_extension)
not.language <- dados %>% filter(file_extension  %in% c("xml", "txt", "yml","png","h","scss", "jpg", "lock", "ts", "gradle","svg", "rst", "gif","ico","config","pdf","yaml", "html", "eot", "json", "less", "map", "pbxproj","ttf","woff", "css", "csproj"))
dados <- setdiff(dados, not.language)
dados <- dados %>% mutate(full_date = paste(month_day, the_month, the_year, sep = '-'))
dados <- dados %>% mutate(week_day= weekdays(as.Date(full_date,'%d-%m-%Y')))
dados.week <- dados %>% filter(week_day != "sábado" & week_day != "domingo")
dados.weekend <- dados %>% filter(week_day == "sábado" | week_day == "domingo")
dados.week$week_day = FALSE
dados.weekend$week_day = TRUE
dados = rbind(dados.week,dados.weekend)
rm(dados.week)
rm(dados.weekend)
names(dados)[7] <- "weekend"
plot_py <- dados %>%
ggplot(aes(x = weekend, y = users, color = file_extension)) +
geom_boxplot() +
labs(title = "Atividade de usuários", x = "Final de Semana", y = "Usuários", color="Estensão do Arquivo") +
theme(plot.title = element_text(hjust = 0.5))
plot_py
ggplotly(plot_py, width= 1400, height= 700)
plot_p1
plot_p1 <- dados %>%
ggplot(aes(x = weekend, y = users, color = file_extension)) +
geom_boxplot() +
labs(title = "Atividade de usuários", x = "Final de Semana", y = "Usuários", color="Extensão do Arquivo") +
theme(plot.title = element_text(hjust = 0.5))
plot_p1
plot_p1 <- dados %>% filter(file_extension == "cs")
ggplot(aes(x = weekend, y = users, color = weekend)) +
geom_boxplot() +
labs(title = "Atividade de usuários (C#)", x = "Final de Semana", y = "Usuários") +
theme(plot.title = element_text(hjust = 0.5))
plot_p1 <- dados %>% filter(file_extension == "cs") %>%
ggplot(aes(x = weekend, y = users, color = weekend)) +
geom_boxplot() +
labs(title = "Atividade de usuários (C#)", x = "Final de Semana", y = "Usuários") +
theme(plot.title = element_text(hjust = 0.5))
ggplotly(plot_p1)
plot_p1 <- dados %>% filter(file_extension == "cs") %>%
ggplot(aes(x = weekend, y = users, fill = weekend)) +
geom_boxplot() +
labs(title = "Atividade de usuários (C#)", x = "Final de Semana", y = "Usuários") +
theme(plot.title = element_text(hjust = 0.5))
ggplotly(plot_p1)
plot_p1 <- dados %>% filter(file_extension == "swift") %>%
ggplot(aes(x = weekend, y = users, fill = weekend)) +
geom_boxplot() +
labs(title = "Atividade de usuários (C#)", x = "Final de Semana", y = "Usuários") +
theme(plot.title = element_text(hjust = 0.5))
ggplotly(plot_p1)
plot_p1 <- dados %>% filter(file_extension == "sql") %>%
ggplot(aes(x = weekend, y = users, fill = weekend)) +
geom_boxplot() +
labs(title = "Atividade de usuários (C#)", x = "Final de Semana", y = "Usuários") +
theme(plot.title = element_text(hjust = 0.5))
ggplotly(plot_p1)
plot_p1 <- dados %>% filter(file_extension == "go") %>%
ggplot(aes(x = weekend, y = users, fill = weekend)) +
geom_boxplot() +
labs(title = "Atividade de usuários (C#)", x = "Final de Semana", y = "Usuários") +
theme(plot.title = element_text(hjust = 0.5))
ggplotly(plot_p1)
plot_p1 <- dados %>% filter(file_extension == "cs") %>%
ggplot(aes(x = weekend, y = users, fill = weekend)) +
geom_boxplot() +
labs(title = "Atividade de usuários (C#)", x = "Final de Semana", y = "Usuários") +
theme(plot.title = element_text(hjust = 0.5))
ggplotly(plot_p1)
cs <- dados %>% filter(file_extension == "cs")
median_cs <- bootstrap2(cs$users,
treatment = cs$weekend,
median,
R = 15000)
library(boot)
cs <- dados %>% filter(file_extension == "cs")
median_cs <- bootstrap2(cs$users,
treatment = cs$weekend,
median,
R = 15000)
library(bootstrap2)
library(resample)
cs <- dados %>% filter(file_extension == "cs")
median_cs <- bootstrap2(cs$users,
treatment = cs$weekend,
median,
R = 15000)
median_cs <- bootstrap2(cs$users,
treatment = cs$weekend,
median,
R = 15000)
median_cs_ci <- CI.percentile(median_cs, probs = c(.025, .975))
data.frame(median_cs_ci) %>%
ggplot() +
geom_errorbar(aes(x = "Intervalo de confiança da diferença entre as medianas", ymin = X2.5., ymax = X97.5.), width = .2) +
geom_hline(yintercept = 1475.5, colour = "red")
View(median_cs_ci)
data.frame(median_cs_ci) %>%
ggplot() +
geom_errorbar(aes(x = "Intervalo de confiança da diferença entre as medianas", ymin = X2.5., ymax = X97.5.), width = .2) +
geom_hline(yintercept = 375, colour = "red")
data.frame(median_cs_ci) %>%
ggplot() +
geom_errorbar(aes(x = "Intervalo de confiança da diferença entre as medianas", ymin = X2.5., ymax = X97.5.), width = .2) +
geom_hline(yintercept = 382, colour = "red")
plot_p1 <- dados %>% filter(file_extension == "go") %>%
ggplot(aes(x = weekend, y = users, fill = weekend)) +
geom_boxplot() +
labs(title = "Atividade de usuários (Go)", x = "Final de Semana", y = "Usuários") +
theme(plot.title = element_text(hjust = 0.5))
ggplotly(plot_p1)
go <- dados %>% filter(file_extension == "go")
median_go <- bootstrap2(go$users,
treatment = go$weekend,
median,
R = 15000)
median_go_ci <- CI.percentile(median_go, probs = c(.025, .975))
data.frame(median_go_ci) %>%
ggplot() +
geom_errorbar(aes(x = "Intervalo de confiança da diferença entre as medianas", ymin = X2.5., ymax = X97.5.), width = .2) +
geom_hline(yintercept = 382, colour = "red")
View(median_go_ci)
go <- dados %>% filter(file_extension == "go")
median_go <- bootstrap2(go$users,
treatment = go$weekend,
median,
R = 15000)
median_go_ci <- CI.percentile(median_go, probs = c(.025, .975))
data.frame(median_go_ci) %>%
ggplot() +
geom_errorbar(aes(x = "Intervalo de confiança da diferença entre as medianas", ymin = X2.5., ymax = X97.5.), width = .2) +
geom_hline(yintercept = 429, colour = "red")
data.frame(median_go_ci) %>%
ggplot() +
geom_errorbar(aes(x = "Intervalo de confiança da diferença entre as medianas", ymin = X2.5., ymax = X97.5.), width = .2) +
geom_hline(yintercept = 429, colour = "blue")
cs <- dados %>% filter(file_extension == "cs")
median_cs <- bootstrap2(cs$users,
treatment = cs$weekend,
var,
R = 15000)
median_cs_ci <- CI.percentile(median_cs, probs = c(.025, .975))
data.frame(median_cs_ci) %>%
ggplot() +
geom_errorbar(aes(x = "Intervalo de confiança da diferença entre as variancias", ymin = X2.5., ymax = X97.5.), width = .2) +
geom_hline(yintercept = 382, colour = "red")
View(median_cs_ci)
cs <- dados %>% filter(file_extension == "cs")
sd_cs <- bootstrap2(cs$users,
treatment = cs$weekend,
sd,
R = 15000)
sd_cs_ci <- CI.percentile(sd_cs, probs = c(.025, .975))
data.frame(sd_cs_ci) %>%
ggplot() +
geom_errorbar(aes(x = "Intervalo de confiança da diferença entre os desvios padrão", ymin = X2.5., ymax = X97.5.), width = .2) +
geom_hline(yintercept = 382, colour = "red")
View(sd_cs_ci)
dados <- read.csv("github-users-committing-filetypes.csv")
unique(dados$file_extension)
not.language <- dados %>% filter(file_extension  %in% c("xml", "txt", "yml","png","h","scss", "jpg", "lock", "ts", "gradle","svg", "rst", "gif","ico","config","pdf","yaml", "html", "eot", "json", "less", "map", "pbxproj","ttf","woff", "css", "csproj"))
dados <- setdiff(dados, not.language)
dados <- dados %>% mutate(full_date = paste(month_day, the_month, the_year, sep = '-'))
dados <- dados %>% mutate(week_day= weekdays(as.Date(full_date,'%d-%m-%Y')))
dados.week <- dados %>% filter(week_day != "sábado" & week_day != "domingo")
dados.weekend <- dados %>% filter(week_day == "sábado" | week_day == "domingo")
dados.week$week_day = FALSE
dados.weekend$week_day = TRUE
dados = rbind(dados.week,dados.weekend)
rm(dados.week)
rm(dados.weekend)
names(dados)[7] <- "weekend"
plot_p1 <- dados %>%
ggplot(aes(x = weekend, y = users, color = file_extension)) +
geom_boxplot() +
labs(title = "Atividade de usuários", x = "Final de Semana", y = "Usuários", color="Extensão do Arquivo") +
theme(plot.title = element_text(hjust = 0.5))
plot_p1
dados <- read.csv("github-users-committing-filetypes.csv")
unique(dados$file_extension)
not.language <- dados %>% filter(file_extension  %in% c("xml", "txt", "yml","png","h","scss", "jpg", "lock", "ts", "gradle","svg", "rst", "gif","ico","config","pdf","yaml", "html", "eot", "json", "less", "map", "pbxproj","ttf","woff", "css", "csproj"))
dados <- setdiff(dados, not.language)
dados <- dados %>% mutate(full_date = paste(month_day, the_month, the_year, sep = '-'))
dados <- dados %>% mutate(week_day= weekdays(as.Date(full_date,'%d-%m-%Y')))
dados.week <- dados %>% filter(week_day != "sábado" & week_day != "domingo")
dados.weekend <- dados %>% filter(week_day == "sábado" | week_day == "domingo")
dados.week$week_day = FALSE
dados.weekend$week_day = TRUE
dados = rbind(dados.week,dados.weekend)
rm(dados.week)
rm(dados.weekend)
names(dados)[7] <- "weekend"
plot_p1 <- dados %>%
ggplot(aes(x = weekend, y = users, color = file_extension)) +
geom_boxplot() +
labs(title = "Atividade de usuários", x = "Final de Semana", y = "Usuários", color="Extensão do Arquivo") +
theme(plot.title = element_text(hjust = 0.5))
plot_p1
plot_p1 <- dados %>% filter(file_extension == "cs") %>%
ggplot(aes(x = weekend, y = users, fill = weekend)) +
geom_boxplot() +
labs(title = "Atividade de usuários (C#)", x = "Final de Semana", y = "Usuários") +
theme(plot.title = element_text(hjust = 0.5))
ggplotly(plot_p1)
cs <- dados %>% filter(file_extension == "cs")
var_cs <- bootstrap2(cs$users,
treatment = cs$weekend,
var,
R = 15000)
var_cs_ci <- CI.percentile(var_cs, probs = c(.025, .975))
data.frame(var_cs_ci) %>%
ggplot() +
geom_errorbar(aes(x = "Intervalo de confiança da diferença entre os desvios padrão", ymin = X2.5., ymax = X97.5.), width = .2) +
geom_hline(yintercept = 382, colour = "red")
cs1 <- dados %>% filter(file_extension == "cs" & weekend = TRUE)
cs1 <- dados %>% filter(file_extension == "cs" & weekend == TRUE)
var(cs1%users)
var(cs1$users)
cs1 <- dados %>% filter(file_extension == "cs" & weekend == FALSE)
cs2 <- dados %>% filter(file_extension == "cs" & weekend == FALSE)
var(cs1$users)
var(cs2$users)
var(cs1$users)
var(cs2$users)
cs1 <- dados %>% filter(file_extension == "cs" & weekend == TRUE)
var(cs1$users)
cs2 <- dados %>% filter(file_extension == "cs" & weekend == FALSE)
var(cs2$users)
cs1 <- dados %>% filter(file_extension == "cs" & weekend == TRUE)
var1 <- var(cs1$users)
cs2 <- dados %>% filter(file_extension == "cs" & weekend == FALSE)
var2 <- var(cs2$users)
var2 - var1
View(dados)
cs <- dados %>% filter(file_extension == "cs")
View(cs)
View(cs1)
View(cs2)
var2 <- var(cs2$users)
var2
var1
var2 - var1
sd(cs2)
sd(cs2$users)
var2
plot_p1 <- dados %>%
ggplot(aes(x = weekend, y = users, color = file_extension)) +
geom_boxplot() +
labs(title = "Atividade de usuários", x = "Final de Semana", y = "Usuários", color="Extensão do Arquivo") +
theme(plot.title = element_text(hjust = 0.5))
plot_p1
ggplotly(plot_p1)
plot_p1 <- dados %>% filter(file_extension == "c") %>%
ggplot(aes(x = weekend, y = users, fill = weekend)) +
geom_boxplot() +
labs(title = "Atividade de usuários (C#)", x = "Final de Semana", y = "Usuários") +
theme(plot.title = element_text(hjust = 0.5))
ggplotly(plot_p1)
plot_p1 <- dados %>% filter(file_extension == "c") %>%
ggplot(aes(x = weekend, y = users, fill = weekend)) +
geom_boxplot() +
labs(title = "Atividade de usuários (C)", x = "Final de Semana", y = "Usuários") +
theme(plot.title = element_text(hjust = 0.5))
ggplotly(plot_p1)
c <- dados %>% filter(file_extension == "c")
var_c <- bootstrap2(c$users,
treatment = cs$weekend,
var,
R = 15000)
var_c_ci <- CI.percentile(var_c, probs = c(.025, .975))
data.frame(var_c_ci) %>%
ggplot() +
geom_errorbar(aes(x = "Intervalo de confiança da diferença entre as variâncias", ymin = X2.5., ymax = X97.5.), width = .2) +
geom_hline(yintercept = 382, colour = "red")
View(var_c_ci)
data.frame(var_c_ci) %>%
ggplot() +
geom_errorbar(aes(x = "Intervalo de confiança da diferença entre as variâncias", ymin = X2.5., ymax = X97.5.), width = .2) +
geom_hline(yintercept = 35150.96, colour = "red")
View(dados)
dados$holidays = dados$the_month %in% c(1,7, 12)
View(dados)
dados %>% ggplot(aes(x=holidays, y=median(users), color= file_extension)) + geom_bar()
dados %>% ggplot(aes(x=holidays, y=median(users), color= file_extension)) + geom_col()
dados %>% ggplot(aes(x=holidays, y=median(users), fill= file_extension)) + geom_col()
dados %>% ggplot(aes(x=holidays, y=users)) + geom_boxplot()
dados %>% ggplot(aes(x=holidays, y=users, color = holidays)) + geom_boxplot() + geom_jitter()
help(geom_jitter)
dados %>% ggplot(aes(x=holidays, y=users, color = holidays)) + geom_boxplot() + geom_jitter(width = 0.5)
dados %>% ggplot(aes(x=holidays, y=users, color = holidays)) + geom_boxplot() + geom_jitter(width = 0.5, alpha = 0.6)
dados %>% ggplot(aes(x=holidays, y=users, color = holidays)) + geom_boxplot()
ggplotly(p2)
p2 <- dados %>% ggplot(aes(x=holidays, y=users, color = holidays)) + geom_boxplot()
ggplotly(p2)
p2 <- dados %>% ggplot(aes(x=holidays, y=users, color = holidays)) + geom_boxplot(outlier.shape = NA)
ggplotly(p2)
p2 <- dados %>% ggplot(aes(x=holidays, y=users, color = holidays, fill = "white")) + geom_boxplot(outlier.shape = NA)
ggplotly()
ggplotly(p2)
p2 <- dados %>% ggplot(aes(x=holidays, y=users, color = holidays, fill = "#ffffff")) + geom_boxplot(outlier.shape = NA)
ggplotly(p2)
p2 <- dados %>% ggplot(aes(x=holidays, y=users, color = holidays, fill = #ffffff)) + geom_boxplot(outlier.shape = NA)
ggplotly(p2)
p2 <- dados %>% ggplot(aes(x=holidays, y=users, color = holidays, fill = "#ffffff")) + geom_boxplot(outlier.shape = NA)
p2 <- dados %>% ggplot(aes(x=holidays, y=users, color = holidays, fill = "#ffffff" )) + geom_boxplot(outlier.shape = NA)
ggplotly(p2)
p2 <- dados %>% ggplot(aes(x=holidays, y=users, fill = holidays )) + geom_boxplot(outlier.shape = NA)
ggplotly(p2)
median_holidays <- bootstrap2(dados$users,
treatment = dados$holidays,
median,
R = 15000)
median_holidays_ci <- CI.percentile(median_holidays, probs = c(.025, .975))
data.frame(median_holidays_ci) %>%
ggplot() +
geom_errorbar(aes(x = "Intervalo de confiança da diferença entre as medianas", ymin = X2.5., ymax = X97.5.), width = .2) +
geom_hline(yintercept = 465.5, colour = "#00bfc4")
