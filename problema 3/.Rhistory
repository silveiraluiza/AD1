ggplotly(p1, width = 1000,height = 500 )
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
p1 <- plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("RATING", "`BOX OFFICE'"),
linkage_method = "ward.D", ks = 5) + scale_y_log10()
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
p1 <- plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("RATING", "`BOX OFFICE´"),
linkage_method = "ward.D", ks = 5) + scale_y_log10()
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
p1 <- plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("RATING", "`BOX OFFICE`"),
linkage_method = "ward.D", ks = 5) + scale_y_log10()
ggplotly(p1, width = 1000, height = 500 )
knitr::opts_chunk$set(echo = TRUE)
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
p1 <- plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("RATING", "`BOX OFFICE`"),
linkage_method = "ward.D", ks = 5) + scale_y_log10()
p = filmes2 %>%
ggplot(aes(x = RATING, y = `BOX OFFICE`, label = TITLE)) +
geom_point(color = "#3ea366")
ggplotly(p, width = 800, height = 500)
p1
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
p1 <- plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("RATING", "`BOX OFFICE`"),
linkage_method = "ward.D", ks = 5) + scale_y_log10()
p = filmes2 %>%
ggplot(aes(x = RATING, y = `BOX OFFICE`, label = TITLE)) +
geom_point(color = "#3ea366")
ggplotly(p, width = 800, height = 500)
p = filmes2 %>%
ggplot(aes(x = RATING, y = ~values("log de box office:" + `BOX OFFICE`), label = TITLE)) +
geom_point(color = "#3ea366")
ggplotly(p, width = 800, height = 500)
ggplotly(p, width = 800, height = 500) + p1
p1
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
p1 <- plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("RATING", "`BOX OFFICE`"),
linkage_method = "ward.D", ks = 5) + scale_y_log10()
ggplotly(p1, width = 800, height = 500)
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
p1 <- plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("RATING", "TITLE"),
linkage_method = "ward.D", ks = 5) + scale_y_log10()
ggplotly(p1, width = 800, height = 500)
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
p1 <- plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("RATING", "TITLE"),
linkage_method = "ward.D", ks = 5)
ggplotly(p1, width = 800, height = 500)
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
p1 <- plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("RATING", "`BOX OFFICE`"),
linkage_method = "ward.D", ks = 5) + scale_y_log10()
ggplotly(p1, width = 800, height = 500)
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
p1 <- plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("RATING", "`BOX OFFICE`"),
filmes2$TITLE,
linkage_method = "ward.D", ks = 5) + scale_y_log10()
ggplotly(p1, width = 800, height = 500)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse, warn.conflicts = F)
library(rvest)
library(plotly)
library(cluster)
library(ggdendro)
library(tibble)
theme_set(theme_light())
source("plota_solucoes_hclust.R")
library(rvest)
url = "https://www.rottentomatoes.com/celebrity/angelina_jolie/"
download.file(url, destfile = "scrapedpage.html", quiet=TRUE)
from_page <- read_html("https://www.rottentomatoes.com/celebrity/angelina_jolie/") %>%
html_node("#filmographyTbl") %>% # A sintaxe da expressão é de um seletor à lá JQuery: https://rdrr.io/cran/rvest/man/html_nodes.html
html_table(fill=TRUE) %>% # Faz parse
as.tibble()
filmes = from_page %>%
filter(RATING != "No Score Yet",
`BOX OFFICE` != "—",
CREDIT != "Executive Producer") %>%
mutate(RATING = as.numeric(gsub("%", "", RATING)),
`BOX OFFICE` = as.numeric(gsub("[$|M]", "", `BOX OFFICE`))) %>%
filter(`BOX OFFICE` >= 1) # Para não pegar filmes que ainda não foram lançados
filmes %>%
ggplot(aes(x = RATING)) +
geom_histogram(bins = 16, fill = "#a24fa8" ) +
geom_rug(color = "#aa61a1")
filmes %>%
ggplot(aes(x = `BOX OFFICE`)) +
geom_histogram(bins = 20, fill = "#6075af") +
geom_rug(color = "#2c3e6d")
filmes %>%
ggplot(aes(x = `BOX OFFICE`)) +
geom_histogram(bins = 20, fill = "#7db8d1") +
scale_x_log10() +
geom_rug(color = "#466775")
row.names(filmes) = NULL
agrupamento_h = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING) %>%
dist(method = "euclidian") %>%
hclust(method = "ward.D")
ggdendrogram(agrupamento_h, rotate = T, size = 2) +
geom_hline(yintercept = 45, colour = "red")
solucoes = tibble(k = 1:6)
atribuicoes = solucoes %>%
group_by(k) %>%
do(cbind(filmes,
grupo = as.character(cutree(agrupamento_h, .$k))))
atribuicoes %>%
ggplot(aes(x = "Filmes", y = RATING, colour = grupo)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6) +
facet_wrap(~ paste(k, " grupos"))
solucoes = tibble(k = 3)
atribuicoes = solucoes %>%
group_by(k) %>%
do(cbind(filmes,
grupo = as.character(cutree(agrupamento_h, .$k))))
p <- atribuicoes %>%
ggplot(aes(x = "Filmes", y = RATING, colour = grupo)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6) +
facet_wrap(~ paste(k, " grupos"))
ggplotly(p, width = 800, height = 500)
row.names(filmes) = NULL
agrupamento_h = filmes %>% mutate(`BOX OFFICE` = log(`BOX OFFICE`)) %>%
column_to_rownames("TITLE") %>%
select(`BOX OFFICE`) %>%
dist(method = "euclidian") %>%
hclust(method = "ward.D")
ggdendrogram(agrupamento_h, rotate = T, size = 2) +
geom_hline(yintercept = 4.5, colour = "red")
filmes %>% mutate(`BOX OFFICE` = log(`BOX OFFICE`)) %>%
plota_hclusts_1d("`BOX OFFICE`", linkage_method = "centroid", ks = 1:6) +
scale_y_log10()
filmes %>% mutate(`BOX OFFICE` = log(`BOX OFFICE`)) %>%
plota_hclusts_1d("`BOX OFFICE`", linkage_method = "centroid", ks = 3:4) +
scale_y_log10()
distancias = filmes %>%
select(RATING) %>%
dist(method = "euclidean")
agrupamento_hs = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING) %>%
dist(method = "euclidean") %>%
hclust(method = "complete")
cores = RColorBrewer::brewer.pal(4, "Set2")
plot(silhouette(cutree(agrupamento_hs, k = 4), distancias), col = cores, border = NA)
cores = RColorBrewer::brewer.pal(3, "Set3")
plot(silhouette(cutree(agrupamento_hs, k = 3), distancias), col = cores, border = NA)
p = filmes %>%
ggplot(aes(x = RATING, y = `BOX OFFICE`, label = TITLE)) +
geom_point(color = "#3ea366")
ggplotly(p, width = 800, height = 500)
agrupamento_h_2d = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING, `BOX OFFICE`) %>%
mutate(`BOX OFFICE` = log10(`BOX OFFICE`)) %>%
mutate_all(funs(scale)) %>%
dist(method = "euclidean") %>%
hclust(method = "centroid")
ggdendrogram(agrupamento_h_2d, rotate = TRUE)
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("RATING", "`BOX OFFICE`"),
linkage_method = "ward.D", ks = 1:6) + scale_y_log10()
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("RATING", "`BOX OFFICE`"), filmes2$TITLE,
linkage_method = "ward.D", ks = 1:6) + scale_y_log10()
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("RATING", "`BOX OFFICE`"), TITLE,
linkage_method = "ward.D", ks = 1:6) + scale_y_log10()
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("RATING", "`BOX OFFICE`"), 'TITLE',
linkage_method = "ward.D", ks = 1:6) + scale_y_log10()
distancias = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING, `BOX OFFICE`) %>%
mutate(`BOX OFFICE` = log10(`BOX OFFICE`)) %>%
mutate_all(funs(scale)) %>%
dist(method = "euclidean")
cores = RColorBrewer::brewer.pal(4, "Set3")
plot(silhouette(cutree(agrupamento_h_2d, k = 4), distancias), col = cores, border = NA)
cores = RColorBrewer::brewer.pal(5, "Set2")
plot(silhouette(cutree(agrupamento_h_2d, k = 5), distancias), col = cores, border = NA)
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
p1 <- plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("RATING", "`BOX OFFICE`"),
'TITLE',
linkage_method = "ward.D", ks = 5) + scale_y_log10()
ggplotly(p1, width = 800, height = 500)
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
names(filmes2)[names(filmes2)=="`BOX OFFICE`"] <- "`Log da renda`"
names(filmes2)[names(filmes2)=="RATING"] <- "Avaliação"
p1 <- plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("Avaliação", "`Log da renda`"),
'TITLE',
linkage_method = "ward.D", ks = 5) + scale_y_log10()
ggplotly(p1, width = 800, height = 500)
View(filmes2)
names(filmes2)[names(filmes2)=="`BOX OFFICE`"] <- "`Log da renda`"
names(filmes2)[names(filmes2)=="`BOX OFFICE`"] <- `Log da renda`
names(filmes2)[names(filmes2)=="`BOX OFFICE`"] <- "Log da renda"
View(filmes2)
View(filmes)
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
names(filmes2)[names(filmes2)=="`BOX OFFICE`"] <- "LogRenda"
names(filmes2)[names(filmes2)=="RATING"] <- "Avaliacao"
p1 <- plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("Avaliacao", "LogRenda"),
'TITLE',
linkage_method = "ward.D", ks = 5) + scale_y_log10()
ggplotly(p1, width = 800, height = 500)
View(filmes2)
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
names(filmes2)[names(filmes2)==`BOX OFFICE`] <- "LogRenda"
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
names(filmes2)[names(filmes2)=="BOX OFFICE"] <- "LogRenda"
names(filmes2)[names(filmes2)=='RATING'] <- "Avaliacao"
p1 <- plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("Avaliacao", "LogRenda"),
'TITLE',
linkage_method = "ward.D", ks = 5) + scale_y_log10()
ggplotly(p1, width = 800, height = 500)
View(filmes2)
p1
View(filmes2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse, warn.conflicts = F)
library(rvest)
library(plotly)
library(cluster)
library(ggdendro)
library(tibble)
theme_set(theme_light())
source("plota_solucoes_hclust.R")
library(rvest)
url = "https://www.rottentomatoes.com/celebrity/angelina_jolie/"
download.file(url, destfile = "scrapedpage.html", quiet=TRUE)
from_page <- read_html("https://www.rottentomatoes.com/celebrity/angelina_jolie/") %>%
html_node("#filmographyTbl") %>% # A sintaxe da expressão é de um seletor à lá JQuery: https://rdrr.io/cran/rvest/man/html_nodes.html
html_table(fill=TRUE) %>% # Faz parse
as.tibble()
filmes = from_page %>%
filter(RATING != "No Score Yet",
`BOX OFFICE` != "—",
CREDIT != "Executive Producer") %>%
mutate(RATING = as.numeric(gsub("%", "", RATING)),
`BOX OFFICE` = as.numeric(gsub("[$|M]", "", `BOX OFFICE`))) %>%
filter(`BOX OFFICE` >= 1) # Para não pegar filmes que ainda não foram lançados
filmes %>%
ggplot(aes(x = RATING)) +
geom_histogram(bins = 16, fill = "#a24fa8" ) +
geom_rug(color = "#aa61a1")
filmes %>%
ggplot(aes(x = `BOX OFFICE`)) +
geom_histogram(bins = 20, fill = "#6075af") +
geom_rug(color = "#2c3e6d")
filmes %>%
ggplot(aes(x = `BOX OFFICE`)) +
geom_histogram(bins = 20, fill = "#7db8d1") +
scale_x_log10() +
geom_rug(color = "#466775")
row.names(filmes) = NULL
agrupamento_h = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING) %>%
dist(method = "euclidian") %>%
hclust(method = "ward.D")
ggdendrogram(agrupamento_h, rotate = T, size = 2) +
geom_hline(yintercept = 45, colour = "red")
solucoes = tibble(k = 1:6)
atribuicoes = solucoes %>%
group_by(k) %>%
do(cbind(filmes,
grupo = as.character(cutree(agrupamento_h, .$k))))
atribuicoes %>%
ggplot(aes(x = "Filmes", y = RATING, colour = grupo)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6) +
facet_wrap(~ paste(k, " grupos"))
solucoes = tibble(k = 3)
atribuicoes = solucoes %>%
group_by(k) %>%
do(cbind(filmes,
grupo = as.character(cutree(agrupamento_h, .$k))))
p <- atribuicoes %>%
ggplot(aes(x = "Filmes", y = RATING, colour = grupo)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6) +
facet_wrap(~ paste(k, " grupos"))
ggplotly(p, width = 800, height = 500)
row.names(filmes) = NULL
agrupamento_h = filmes %>% mutate(`BOX OFFICE` = log(`BOX OFFICE`)) %>%
column_to_rownames("TITLE") %>%
select(`BOX OFFICE`) %>%
dist(method = "euclidian") %>%
hclust(method = "ward.D")
ggdendrogram(agrupamento_h, rotate = T, size = 2) +
geom_hline(yintercept = 4.5, colour = "red")
filmes %>% mutate(`BOX OFFICE` = log(`BOX OFFICE`)) %>%
plota_hclusts_1d("`BOX OFFICE`", linkage_method = "centroid", ks = 1:6) +
scale_y_log10()
filmes %>% mutate(`BOX OFFICE` = log(`BOX OFFICE`)) %>%
plota_hclusts_1d("`BOX OFFICE`", linkage_method = "centroid", ks = 3:4) +
scale_y_log10()
distancias = filmes %>%
select(RATING) %>%
dist(method = "euclidean")
agrupamento_hs = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING) %>%
dist(method = "euclidean") %>%
hclust(method = "complete")
cores = RColorBrewer::brewer.pal(4, "Set2")
plot(silhouette(cutree(agrupamento_hs, k = 4), distancias), col = cores, border = NA)
cores = RColorBrewer::brewer.pal(3, "Set3")
plot(silhouette(cutree(agrupamento_hs, k = 3), distancias), col = cores, border = NA)
p = filmes %>%
ggplot(aes(x = RATING, y = `BOX OFFICE`, label = TITLE)) +
geom_point(color = "#3ea366")
ggplotly(p, width = 800, height = 500)
agrupamento_h_2d = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING, `BOX OFFICE`) %>%
mutate(`BOX OFFICE` = log10(`BOX OFFICE`)) %>%
mutate_all(funs(scale)) %>%
dist(method = "euclidean") %>%
hclust(method = "centroid")
ggdendrogram(agrupamento_h_2d, rotate = TRUE)
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("RATING", "`BOX OFFICE`"), 'TITLE',
linkage_method = "ward.D", ks = 1:6) + scale_y_log10()
distancias = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING, `BOX OFFICE`) %>%
mutate(`BOX OFFICE` = log10(`BOX OFFICE`)) %>%
mutate_all(funs(scale)) %>%
dist(method = "euclidean")
cores = RColorBrewer::brewer.pal(4, "Set3")
plot(silhouette(cutree(agrupamento_h_2d, k = 4), distancias), col = cores, border = NA)
cores = RColorBrewer::brewer.pal(5, "Set2")
plot(silhouette(cutree(agrupamento_h_2d, k = 5), distancias), col = cores, border = NA)
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
names(filmes2)[names(filmes2)=="BOX OFFICE"] <- "LogRenda"
names(filmes2)[names(filmes2)=="RATING"] <- "Avaliacao"
p1 <- plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("Avaliacao", "`LogRenda`"),
'TITLE',
linkage_method = "ward.D", ks = 5) + scale_y_log10()
ggplotly(p1, width = 800, height = 500)
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
p1 <- plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("RATING", "`BOX OFFICE`"),
'TITLE',
linkage_method = "ward.D", ks = 5) + scale_y_log10()
ggplotly(p1, width = 800, height = 500)
names(filmes)[names(filmes)=="BOX OFFICE"] <- "LogRenda"
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
filmes2 = filmes %>% mutate(LogRenda = log10(LogR))
filmes2 = filmes %>% mutate(LogRenda = log10(LogRenda))
View(filmes2)
p1 <- plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("RATING", "LogRenda"),
'TITLE',
linkage_method = "ward.D", ks = 5) + scale_y_log10()
ggplotly(p1, width = 800, height = 500)
names(filmes)[names(filmes)=="RATING"] <- "Avaliacao"
filmes2 = filmes %>% mutate(LogRenda = log10(LogRenda))
p1 <- plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("Avaliacao", "LogRenda"),
'TITLE',
linkage_method = "ward.D", ks = 5) + scale_y_log10()
ggplotly(p1, width = 800, height = 500)
p <- atribuicoes %>%
ggplot(aes(x = "Filmes", y = RATING, colour = grupo, text = TITLE)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6) +
facet_wrap(~ paste(k, " grupos"))
ggplotly(p, width = 800, height = 500)
names(filmes)[names(filmes)=="RATING"] <- "avaliacao"
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse, warn.conflicts = F)
library(rvest)
library(plotly)
library(cluster)
library(ggdendro)
library(tibble)
theme_set(theme_light())
source("plota_solucoes_hclust.R")
library(rvest)
url = "https://www.rottentomatoes.com/celebrity/angelina_jolie/"
download.file(url, destfile = "scrapedpage.html", quiet=TRUE)
from_page <- read_html("https://www.rottentomatoes.com/celebrity/angelina_jolie/") %>%
html_node("#filmographyTbl") %>% # A sintaxe da expressão é de um seletor à lá JQuery: https://rdrr.io/cran/rvest/man/html_nodes.html
html_table(fill=TRUE) %>% # Faz parse
as.tibble()
filmes = from_page %>%
filter(RATING != "No Score Yet",
`BOX OFFICE` != "—",
CREDIT != "Executive Producer") %>%
mutate(RATING = as.numeric(gsub("%", "", RATING)),
`BOX OFFICE` = as.numeric(gsub("[$|M]", "", `BOX OFFICE`))) %>%
filter(`BOX OFFICE` >= 1) # Para não pegar filmes que ainda não foram lançados
filmes %>%
ggplot(aes(x = RATING)) +
geom_histogram(bins = 16, fill = "#a24fa8" ) +
geom_rug(color = "#aa61a1")
filmes %>%
ggplot(aes(x = `BOX OFFICE`)) +
geom_histogram(bins = 20, fill = "#6075af") +
geom_rug(color = "#2c3e6d")
filmes %>%
ggplot(aes(x = `BOX OFFICE`)) +
geom_histogram(bins = 20, fill = "#7db8d1") +
scale_x_log10() +
geom_rug(color = "#466775")
ggdendrogram(agrupamento_h, rotate = T, size = 2) +
geom_hline(yintercept = 45, colour = "red")
agrupamento_h = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING) %>%
dist(method = "euclidian") %>%
hclust(method = "ward.D")
ggdendrogram(agrupamento_h, rotate = T, size = 2) +
geom_hline(yintercept = 45, colour = "red")
atribuicoes = solucoes %>%
group_by(k) %>%
do(cbind(filmes,
grupo = as.character(cutree(agrupamento_h, .$k))))
solucoes = tibble(k = 1:6)
atribuicoes = solucoes %>%
group_by(k) %>%
do(cbind(filmes,
grupo = as.character(cutree(agrupamento_h, .$k))))
atribuicoes %>%
ggplot(aes(x = "Filmes", y = RATING, colour = grupo)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6) +
facet_wrap(~ paste(k, " grupos"))
solucoes = tibble(k = 3)
atribuicoes = solucoes %>%
group_by(k) %>%
do(cbind(filmes,
grupo = as.character(cutree(agrupamento_h, .$k))))
names(atribuicoes)[names(atribuicoes)=="RATING"] <- "avaliacao"
p <- atribuicoes %>%
ggplot(aes(x = "Filmes", y = avaliacao, colour = grupo, text = TITLE)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6) +
facet_wrap(~ paste(k, " grupos"))
ggplotly(p, width = 800, height = 500)
solucoes = tibble(k = 3)
atribuicoes = solucoes %>%
group_by(k) %>%
do(cbind(filmes,
grupo = as.character(cutree(agrupamento_h, .$k))))
names(atribuicoes)[names(atribuicoes)=="RATING"] <- "Nota"
p <- atribuicoes %>%
ggplot(aes(x = "Filmes", y = Nota, colour = grupo, text = TITLE)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6) +
facet_wrap(~ paste(k, " grupos"))
ggplotly(p, width = 800, height = 500)
row.names(filmes) = NULL
agrupamento_h = filmes %>% mutate(`BOX OFFICE` = log(`BOX OFFICE`)) %>%
column_to_rownames("TITLE") %>%
select(`BOX OFFICE`) %>%
dist(method = "euclidian") %>%
hclust(method = "ward.D")
ggdendrogram(agrupamento_h, rotate = T, size = 2) +
geom_hline(yintercept = 4.5, colour = "red")
distancias = filmes %>%
select(RATING) %>%
dist(method = "euclidean")
agrupamento_hs = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING) %>%
dist(method = "euclidean") %>%
hclust(method = "complete")
cores = RColorBrewer::brewer.pal(4, "Set2")
plot(silhouette(cutree(agrupamento_hs, k = 4), distancias), col = cores, border = NA)
cores = RColorBrewer::brewer.pal(3, "Set3")
plot(silhouette(cutree(agrupamento_hs, k = 3), distancias), col = cores, border = NA)
p = filmes %>%
ggplot(aes(x = RATING, y = `BOX OFFICE`, label = TITLE)) +
geom_point(color = "#3ea366")
ggplotly(p, width = 800, height = 500)
